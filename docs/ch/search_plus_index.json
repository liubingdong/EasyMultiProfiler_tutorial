{"./":{"url":"./","title":"Tutorial","keywords":"","body":"EasyMultiProfiler教程 =4.3.3-brightgreen.svg\" referrerpolicy=\"no-referrer\">   刘秉东✉️, 刘雅茜 和 谢黎炜✉️ 编写 2024-07 EasyMultiProfiler 包致力于为 R 平台用户提供一个简便且高效的多组学数据分析工具。该包专门设计用于支持微生物组、基因组和代谢物的下游分析任务，旨在通过优化工作流程来提升分析效率。EasyMultiProfiler 提供了全面的功能，从数据导入、处理到结果可视化，涵盖了多组学数据分析的各个环节，确保用户能够顺畅地完成复杂的分析过程。无论是科研人员还是临床医师，EasyMultiProfiler 都能为其提供直观的操作界面和强大的分析能力，帮助他们更好地解读多组学数据，挖掘潜在的生物学信息。 Copyright © 382983280@qq.com 2024 all right reserved，powered by Gitbook更新时间： 2024-11-14 14:44:37 "},"MD/1 EasyMultiProfiler introduction.html":{"url":"MD/1 EasyMultiProfiler introduction.html","title":"Chapter 1 Introduction","keywords":"","body":"1. EasyMultiProfiler EasyMultiProfiler包采用了面向对象的编程方法，集合了多个数据分析模块，实现了数据在不同模块之间的流畅传递，从而使得整体分析流程标准化和清晰化。EasyMultiProfiler不仅包括当前主流的数据预处理方法，还具备强大的分析能力，不仅涵盖多种主流的分析方法（包括：多样性分析、聚类分析、相关性分析、差异性分析和降维分析等），还支持GSEA富集分析、WGCNA分析以及多组学项目的联合分析。用户可以利用这些功能快速探索数据特征和模式，并通过多种可视化方式（包括：箱型图、散点图、富集点状图、富集网络图、双变量图、富集曲线图、热图、桑基图和结构柱状图等）直观地解释分析结果。总而言之，EasyMultiProfiler为用户提供了一站式的数据处理、分析和可视化服务，简化了大量的中间过程，且逻辑清晰，对于初学者也是非常友好的。 1.1 EasyMultiProfiler的安装 R的版本必须在4.3.3及以上。 (重要!!!) 1.1.1 首次安装 (1) Mac os 用户：使用pak包进行安装。 if (!requireNamespace(\"pak\", quietly=TRUE)) install.packages(\"pak\") if (!requireNamespace(\"remotes\", quietly=TRUE)) install.packages(\"remotes\") remotes::install_version(\"patchwork\",version='1.2.0',force = TRUE) pak::pak(\"liubingdong/EasyMultiProfiler\") library(EasyMultiProfiler) (2) Windows用户： Step1： 安装RTool。 根据已安装的R版本，安装对应版本的RTool（例如：R 4.3.x 需安装 RTool4.3，R 4.4.x 需安装 RTool4.4）。 RTool下载地址一：官方原始地址；下载地址二： 中国镜像地址 。 RTool安装步骤：在下载页面，依此点击[Download R for Windows] →[Rtools]) Step2：成功安装对应版本的RTool之后，请重启R。 Step3：使用pak包进行安装。 if (!requireNamespace(\"pak\", quietly=TRUE)) install.packages(\"pak\") if (!requireNamespace(\"remotes\", quietly=TRUE)) install.packages(\"remotes\") remotes::install_version(\"patchwork\",version='1.2.0',force = TRUE) pak::pak(\"liubingdong/EasyMultiProfiler\") library(EasyMultiProfiler) 注意：更多安装错误及解决方法，请查看章节10.5 安装错误问题。 1.1.2 更新版本 EasyMultiProfiler包在持续更新更多的分析和可视化模块，当需要更新版本时，可以再次运行pak即可进行更新。 pak::pak(\"liubingdong/EasyMultiProfiler\") library(EasyMultiProfiler) 1.2 EasyMultiProfiler基本知识 1.2.1 EasyMultiProfiler的数据对象容器 MAE对象：即MultiAssayExperiment。MAE对象是用户需要初始创建的对象，通常是由多个组学项目的实验数据（assay）和与之对应的样本相关数据（coldata）、特征相关数据（rowdata）组成（相关定义详见本章节1.2.2），也支持创建单一组学项目的MAE对象。 EMPT对象：即EMP-transporter。从MAE对象中提取出单一组学项目，即形成EMPT对象。EMPT对象继承SummarizedExperiment数据存储对象，主要包含assay、rowdata、coldata和各种流程分析所需参数等。 EMP对象：当多个EMPT对象进行联合分析时，可以将这些EMPT对象合并成一个EMP对象。 注意： ①为了尽可能保证原始数据不会被篡改，数据分析过程中从MAE→EMPT的过程是单向的，即不能将EMPT对象重新放回MAE对象。 ②如需修改MAE对象内的EMPT对象，请直接调整EMPT对象，重新组装成MAE对象。 ③当进行联合分析时，可以直接使用+符号将EMPT对象组合成EMP对象，从而进行组学联合分析流程。 ④当参与合并的组学项目名称一致时，将会自动修改后一个组学项目的名称，以确保EMPT对象中组学项目名称的唯一性。 1.2.2 EasyMultiProfiler的数据组成 EasyMultiProfiler对象内存储的每个组学项目的数据均包含以下三项内容：assay、coldata 、rowdata。assay是指组学项目的实验数据；coldata是指样本相关数据；rowdata是指特征相关数据。 Assay Coldata Rowdata Column Feature Sample related data Feature related data Row Sample ID Sample ID Feature 1.2.3 EasyMultiProfiler的数据展现 EasyMultiProfiler包采用tibble格式（一种数据框类型）来呈现数据，在tibble的列名下，用户可以查看对应列的数据类型。常见的数据类型包括：int-整数型、dbl-浮点型、chr-字符串型、lgl-逻辑型(True和False)、fct-因子型、date-日期型、dttm-日期时间型。 1.2.4 EasyMultiProfiler的数据传递 EasyMultiProfiler包使用|>操作符以帮助数据传递，即将前一个模块的输出作为后一个模块的输入（与Magrittr包的%>%操作符功能相同），从而实现连续的数据处理操作。由于数据流程中传递的是EMPT对象，因此整个数据流程几乎没有强制的分析顺序。用户可以自由地在各个模块中进行数据分析探索，而无需担心数据传递的匹配问题。 1.2.5 EasyMultiProfiler的行动参数 EasyMultiProfiler包进行数据分析时，组学项目数据将被存储在EMPT对象内，并在功能模块之间进行传递。在用户完成某个功能模块的分析后，可以使用参数action提取该模块产生的原始分析结果。此参数默认值为action='add'，代表当前功能模块的分析结果将会被添加到EMPT对象内进行传递；action='get'，代表当前功能模块的分析结果将直接输出。 注意： 模块EMP_filter中的参数action用于指定此模块操作是剔除(kick)或者保留(select)。 1.2.6 EasyMultiProfiler的缓存机制 EasyMultiProfiler包的主要分析模块均具备缓存快照机制，即：当重复使用相同的数据进行分析时，分析流程将自动根据哈希值从缓存中提取对应的数据分析结果，从而避免重复计算。这种缓存特性极大地提升了分析流程的便利性，避免了在传统的数据分析中为了存储复杂运算结果而创建多个中间变量的麻烦。用户只需通过|>操作符传递当前的计算结果，即可顺利完成每一个分析步骤，使得整个分析流程更加清晰和简洁。 注意： ① 缓存机制考虑了数据、参数和模块体的差异，基本消除了可能的数据冲突问题。 ② 如果需要重新计算，可以使用use_cached=FALSE取消本次模块的缓存。 &#x1F3F7;️示例：首次计算耗时约7秒；再次计算时，仅耗时0.004秒。 data(MAE) ## First run system.time({ MAE |> EMP_assay_extract('geno_ec') |> EMP_WGCNA_cluster_analysis(RsquaredCut = 0.85) }) ## Second run system.time({ MAE |> EMP_assay_extract('geno_ec') |> EMP_WGCNA_cluster_analysis(RsquaredCut = 0.85) }) ## Close the cached system.time({ MAE |> EMP_assay_extract('geno_ec') |> EMP_WGCNA_cluster_analysis(RsquaredCut = 0.85,use_cached = FALSE) }) Copyright © 382983280@qq.com 2024 all right reserved，powered by Gitbook更新时间： 2024-11-14 17:00:08 "},"MD/2 Create MAE.html":{"url":"MD/2 Create MAE.html","title":"Chapter 2 Import data","keywords":"","body":"2. 创建MultiAssayExperiment对象 本章节主要介绍如何将多组学项目数据导入分析流程。 2.1 创建多组学项目的MultiAssayExperiment对象 当用户处理多个组学项目的数据时，需要将数据导入并组合成一个MAE对象。 2.1.1 创建组学样本编号与受试者编号关系表 在研究中，每名受试者都具有唯一的受试者编号(例如：P1，P2，P3...)，每名受试者可能会采集多种生物样本，测得多种组学项目的数据，包括16s rRNA基因测序的物种注释（taxonomy）、微生物功能基因的KO注释（geno_ko）、微生物功能基因的ec酶注释(geno_ec)等。在分析单一或多个组学项目的数据时，多数情况下受试者编号和组学项目样本编号是相同的（例如：受试者编号为P1，组学项目名称为taxonomy，组学项目样本编号为P1）。但有时候我们也会面临以下几种情况： 仅为单一组学项目：受试者编号和组学项目样本编号不一致（例如：受试者编号为P1，组学项目名称为taxonomy，组学项目样本编号为tax_1）； 包含多个组学项目：同一名受试者中，不同组学项目的样本编号不一致（例如：受试者编号为P1；组学项目名称为taxonomy，对应的组学项目样本编号为tax_1；组学项目名称为geno_ko，对应的组学项目样本编号为genomics_1）。 因此，为了有效地管理和分析这些数据，用户需要建立一张关系表（通常命名为dfmap，用户也可以自行命名），将受试者编号与组学项目样本编号对应起来。基于关系表，用户才能将所有数据顺利地导入到 MultiAssayExperiment 对象中。在后续的分析过程中，EasyMultiProfiler 包会自动根据关系表，将组学项目数据中的样本编号自动替换为受试者编号。 以关系表为基础的分析流程具有以下优势： 数据整合与一致性: 通过关系表，可以确保不同组学项目的数据集中的样本信息被正确地映射和整合，从而保证数据的一致性。 自动化处理: 可以自动化地管理和处理数据，无需手动修改，因此不用担心出现命名不一致的情况。 简化分析流程: 将数据整合并自动将样本编号替换为受试者编号后，分析流程更为流畅和清晰，减少了手动处理可能导致的错误。 注意：请勿混淆“组学项目名称”、“受试者编号”和“组学项目样本编号”。 &#x1F3F7;️示例：创建受试者编号与组学项目样本编号的关系表。 此表需要保存为文件，读入R中。用户也可以手动在R内通过数据框直接创建。 dfmap 注意： ①关系表必须由以下三列组成：assay（组学项目名称）、primary（受试者编号）、colname（组学项目样本编号）。 ②组学项目样本编号（例如：本教程中的tax_1、genomics_1等）是由上游注释流程产生，一般不需要用户做特别修改。 ③允许组学项目样本编号与受试者编号一致（例如：受试者编号为P1，组学项目名称为taxonomy，组学项目样本编号为P1）。 ④每个组学项目的样本编号（或与样本编号对应的受试者编号）必须是样本相关数据受试者编号的子集（或完全相同）。如果组学项目中的样本编号在样本相关数据受试者编号中无对应，应当在这些组学项目中剔除这些样本编号。 ⑤每个组学项目的样本编号必须与关系表的colname逐一对应。 ⑥同一批受试者干预前后组学项目数据的编号方案，请参考10.3章节。 2.1.2 读取样本相关数据注意事项 样本相关数据是指受试者的基本信息，通常包括：受试者的一般人口学资料（性别、年龄、居住地等）、人体测量学资料（身高、体重、腰围等）、心理量表评分结果（焦虑量表、抑郁量表、睡眠量表等）、检验结果（血常规、肝功能、炎性因子等）等。 注意： ①样本相关数据中如果存在缺失值，请直接置空，不要用NA、-、missing等字符占位。 ②样本相关数据的第一列请设置为样本编号，在读取时将其设置为行名（重要）。 ③样本编号必须是唯一的，不能有重复。 ④建议将数据中分类变量的取值设置为字符串，不要使用纯数字，避免引发不必要的问题。 ⑤同一批受试者干预前后组学项目数据的编号方案，请参考10.3章节。 ## row.names=1 必须将样本名作为行名 meta_data 2.1.3 读取微生物组学数据 微生物组学数据是指通过各种微生物上游注释工具产出的、包含各个样本内微生物丰度信息的结果文件。常见的结果文件包括以下五种类型：ASV/OTU表格、界门纲目科属种级别丰度表、MetaPhlan和Humann产生的带有层级关系的丰度表、BIOM文件、QIIME2专属的QZV文件。模块EMP_taxonomy_import支持以上全部格式的结果文件输入，并将其转化为SummmariseExperiment对象。 2.1.3.1 ASV/OTU表格 此文件内第一行和第二行的#字符无需修改。数据文件内必须要包含taxonomy的物种注释信息。 注意： ①该数据文件必须包含名为taxonomy列。 ②taxonomy列必须包含微生物注释列。 ③建议使用;对微生物注释进行分割。 tax_data 2.1.3.2 门纲目科属种级别丰度表 由于高分类级别数据可以转换为低分类级别数据（例如：Species数据可转换为Phylum数据），因此建议用户直接导入最高分类级别的数据。 注意： 模块EMP_taxonomy_import的参数assay_name默认为counts(绝对丰度)；如果实际数据为相对丰度，可输入relative(相对丰度)。 tax_data 2.1.3.3 MetaPhlan和Humann的分类注释表 此注释表的物种注释具有层级结构，通常包含界门纲目科属种各级别的全部结果信息。模块EMP_taxonomy_import可以自动识别最高分类级别的注释信息，并导入完整分类数据。 注意： 输入的数据为此种格式时，需要将在模块EMP_taxonomy_import内指定参数humann_format=TRUE。 tax_data 2.1.3.4 Biom格式文件 Biom格式是QIIME1流程中常见的物种注释结果文件，部分用户也会将QIIME2流程的物种注释文件保存为biom格式便于数据存储。模块EMP_taxonomy_import可以直接读取biom格式文件，并导入数据信息。 注意： 输入的数据为此种格式时，需要将在模块EMP_taxonomy_import内指定file_format='biom'。 tax_data 2.1.3.5 Biom格式文件转化后的表格文件 Biom文件可以利用biom convert方法转换成表格文件，也可以直接导入。 注意： 输入的数据为此种格式时，无需修改表头和#符号。 tax_data 2.1.3.6 qzv格式文件 在Qiime2流程qiime taxa barplot会产生微生物注释结果qzv文件。模块EMP_taxonomy_import可以直接读取qzv格式文件，并导入数据信息。 注意： 输入的数据为此种格式时，需要将在模块EMP_taxonomy_import内指定file_format='qzv'。 tax_data 2.1.4 读取KO/EC组学数据 2.1.4.1 普通表格形式 普通格式的KO/EC组学项目数据是指宏基因组或宏转录组学注释的、以KO或EC编号注释的结果文件。模块EMP_function_import可以直接读取注释表格，并查询KEGG数据库整合对应的注释信息。 注意： ①编码中必须是纯KO和EC编号，例如:不能为KO:K00010，而必须仅为K00010；不能为ec:1.1.1.1,而必须仅为1.1.1.1。 ②模块EMP_function_import内参数assay_name默认为counts（绝对丰度），用户需要根据实际数据输入TPM、FPKM等。 ko_data 2.1.4.1 Humann格式 Humann格式的KO/EC组学项目数据是指由Humann工具产生的分层KO/EC注释表。模块EMP_function_import会忽略UNGROUPED的信息，直接读取注释表格，并查询KEGG数据库整合对应的注释信息。 注意： 文件的表头需要清理干净，删除#等字符。 ko_data 2.1.5 读取标准表格信息 标准表格数据通常是指转录组或代谢组等数据，这类数据没有特殊格式，可直接导入。 2.1.5.1 不含特征注释信息的数据导入 本数据常见于转录组或基因组数据，“行”为特征，“列”为样本。 tran_data 2.1.5.2 包含特征注释信息的数据导入 本数据常见于代谢组学数据，“行”为特征，“列”为样本编号和特征相关注释。导入这种数据时，需要指定样本编号列。 注意： ①可直接通过sampleID指定样本编号。 ②可直接通过关系表指定样本编号。 # 直接指定样本编号 sample_ID 2.1.6 整合全部数据导入MultiAssayExperiment对象 注意： ①本示例中的dfmap即2.1.1中的关系表。 ②关系表内的assay必须转换为因子。 ③objlist内命名必须与关系表assay列的组学项目名称一致。 ④如组装失败，可以用模块MultiAssayExperiment::prepMultiAssay(objlist,meta_data,dfmap)检查数据情况。 ⑤更多有关MultiAssayExperiment包的详细信息可以参考此教程。 #### 关系表的assay必须转换为因子 dfmap$assay 2.2 快速创建单组学项目的MultiAssayExperiment对象 当用户只有单一的组学项目数据（例如：微生物组学项目数据或转录组学项目数据），可通过模块EMP_easy_import快速构建MAE对象，直接进行下游分析流程。 注意： ①type参数包含tax、ko、ec和normal四种方式，需要用户根据上文判断使用。 ②由于单一组学项目不涉及创建关系表，因此丰度矩阵的样本编号必须与样本相关数据中的样本编号一致。 ## row.names=1 必须将样本编号作为行名 meta_data 2.3 MultiAssayExperiment对象存放与读取 当创建完成MAE对象后，可以将其存入本地以便下次分析时直接读取，而无需重复创建步骤。 注意： 在存储前，请务必正确设置R的本地工作目录，数据文件将存储在该工作目录下。 # Save in your working diectory saveRDS(MAE,file = 'MAE.rds') # Load the object MAE Copyright © 382983280@qq.com 2024 all right reserved，powered by Gitbook更新时间： 2024-11-04 00:04:10 "},"MD/3 EMP demo.html":{"url":"MD/3 EMP demo.html","title":"Chapter 3 Demo data","keywords":"","body":"3. EasyMultiProfiler内置示例数据 EasyMultiProfiler包内置了示例MAE对象，其包含了一项横断面研究设计的临床研究的示例数据（并非来自于真实的研究），涉及粪便样本的五个组学项目。 taxonomy（16s rRNA基因测序的物种注释） geno_ko（微生物功能基因的KO注释） geno_ec（微生物功能基因的ec酶注释） untarget_metabol（非靶向代谢组学数据） host_gene（宿主基因数据） 3.1 载入MAE对象 data(MAE) 3.2 组学项目的概览 EasyMultiProfiler 提供了快捷数据概览模块，便于用户从三个维度快速查看MAE对象内存储的数据情况。Data dimention显示每个组学项目内实验数据的样本数目和特征数目，以及组学项目内实验数据的数据格式（包括FPKM、relative、TPM等；由用户在导入时指定）。Data information显示组学项目内样本相关数据的分类数目（例如：受试者基本信息的种类数目）和组学项目内特征相关数据的分类数目（例如：微生物组学数据的界门纲目科属种株）。Data miss显示组学项目内实验数据的样本缺失情况和特征缺失情况。详见本教程7.4章节。 EMP |> EMP_summary() Copyright © 382983280@qq.com 2024 all right reserved，powered by Gitbook更新时间： 2024-08-03 11:17:02 "},"MD/4 Data Extract.html":{"url":"MD/4 Data Extract.html","title":"Chapter 4 Data Extract","keywords":"","body":"4. 数据提取 Data Extract 模块Data Extract 包含三个模块：EMP_assay_extract、EMP_coldta_extract和EMP_rowdata_extract。可帮助用户从MAE对象中提取指定的组学项目数据，以供后续的下游分析。 为了帮助用户更好地理解assay、coldata 、rowdata之间的关系，本章节我们以16s rRNA基因测序的物种注释（taxonomy）以及与之对应的微生物功能基因的KO注释（geno_ko）、微生物功能基因的ec酶注释（geno_ec）为例进行说明。 4.1 提取组学项目的实验数据assay &#x1F3F7;️示例1：提取组学项目taxnomy的assay，获取物种注释丰度矩阵。 MAE |> EMP_assay_extract(experiment='taxonomy') &#x1F3F7;️示例2：提取组学项目taxonomy的assay，通过指定参数pattern_ref和pattern来查找rowdata的Genus列为Lactobacillus的特征，进一步在assay中提取这些特征对应的物种注释丰度矩阵。 注意： ①模块EMP_assay_extract内部提供了检索参数，帮助快速发现感兴趣特征的丰度矩阵。 ②此处的pattern和pattern_ref均是基于rowdata进行字符串匹配查找。 ③指定参数action='get'，可以直接提取数据矩阵的数据框。 MAE |> EMP_assay_extract(experiment='taxonomy', pattern = 'Lactobacillus',pattern_ref = 'Genus') &#x1F3F7;️示例3：提取组学项目geno_ko的assay，通过指定参数pattern_ref和pattern来查找roldata的Name列中为puua或puuc的特征，进一步在assay中提取这些特征对应的KO注释丰度矩阵。 注意： 此处的pattern和pattern_ref均是基于rowdata进行字符串匹配查找。 MAE |> EMP_assay_extract(experiment='geno_ko', pattern = c('puua','puuc'),pattern_ref = 'Name') 4.2 提取组学项目的特征相关数据rowdata 注意： ①当模块EMP_rowdata_extract指定了组学项目名称时，输出的是该组学项目的特征相关信息（例如：指定EMP_rowdata_extract(experiment='taxonomy')，则输出特征的界门纲目科属种株的分级注释；指定EMP_rowdata_extract(experiment='geno_ko')，则输出对应KO基因在KEGG数据库检索的相关信息。如果未指定参数experiment，则输出整个MAE对象中全部组学特征的相关信息。 ②此模块不支持参数action。 &#x1F3F7;️示例1：提取组学项目taxnomy的rowdata。 MAE |> EMP_rowdata_extract(experiment='taxonomy') &#x1F3F7;️示例2：提取组学项目geno_ko的rowdata。 MAE |> EMP_rowdata_extract(experiment='geno_ko') &#x1F3F7;️示例3：提取组学项目geno_ko的assay，通过指定参数pattern_ref和pattern来查找roldata的Name列中为puua的特征，并在assay中提取这些特征对应的KO注释丰度矩阵；最后查看puua特征的相关信息。 MAE |> EMP_assay_extract(experiment='geno_ko', pattern = 'puua',pattern_ref = 'Name')|> EMP_rowdata_extract() 4.3 提取组学项目的样本相关数据coldata 注意： 当EMP_coldata_extract内指定了组学名称时，输出的是该组学样本的样本相关数据信息。如果未指定experiment参数则输出的是整个MAE对象中全部队列样本的样本相关数据信息。 &#x1F3F7;️示例1：提取组学项目taxonomy的coldata。 MAE |> EMP_coldata_extract(experiment='taxonomy') &#x1F3F7;️示例2：将样本表型数据coldata转为实验数据assay，并进行差异性分析。 EasyMultiProfiler 包默认使用assay进行流程分析。如果用户需要分析coldata，可以指定参数action='add'将coldata转换为assay，即可进行各种模块分析。 注意： ①在模块EMP_coldata_extract中，参数coldata_to_assay可以指定将特定的coldata转换为assay。 ②在模块EMP_coldata_extract中，当参数coldata_to_assay缺省时，默认将coldata中的全部连续型变量转入assay。 MAE |> EMP_coldata_extract(experiment='taxonomy',action='add',assay_name = 'counts') |> EMP_diff_analysis(method = 'wilcox.test',estimate_group = 'Group') Copyright © 382983280@qq.com 2024 all right reserved，powered by Gitbook更新时间： 2024-11-07 18:49:04 "},"MD/5 Data Preparetion.html":{"url":"MD/5 Data Preparetion.html","title":"Chapter 5 Data Preparation","keywords":"","body":"5. 数据预处理 Data Preparation 数据预处理是指通过一系列步骤和技术处理原始数据，以确保数据的质量和可用性，为后续分析和建模奠定坚实基础。EasyMultiProfiler包提供了多种数据分析流程中常见的预处理方法，涵盖了标准化、批次校正、过滤分析、特征转换和特征折叠等关键步骤。 Copyright © 382983280@qq.com 2024 all right reserved，powered by Gitbook更新时间： 2024-11-07 18:40:11 "},"MD/5.1 EMP_collapse.html":{"url":"MD/5.1 EMP_collapse.html","title":"5.1 EMP_collapse","keywords":"","body":"5.1 数据折叠 EMP_collapse 数据折叠是指对原始的assay进行合并以生成新的assay。EMP_collapse可以根据rowdata或coldata中的指定数据进行折叠。在折叠过程中，可以选择计算平均值、中位数、求和、最大值或最小值作为合并后的结果。 5.1.1 根据重复的coldata合并assay EMP_collapse 可以将assay按照coldata进行折叠。 &#x1F3F7;️示例：按照coldata的Group列合并assay。 折叠前的assay： MAE |> EMP_assay_extract(experiment='taxonomy') 折叠后的assay： 提取组学项目taxonomy的assay，参数estimate_group指定按照coldata的Group列折叠，参数collapse_by指定按照col（coldata）折叠，参数collapse_sep指定使用+分隔符来合并该组学项目的coldata中发生折叠的字符串单元格。 MAE |> EMP_assay_extract(experiment='taxonomy') |> EMP_collapse(collapse_by='col',estimate_group = 'Group', method = 'mean',collapse_sep = '+') 折叠后的coldata： 注意： 尽管数据折叠操作本质上是将assay进行折叠，但就任何组学项目而言，assay、coldata和rowdata是从建立MAE对象时就绑定、联系在一起的。因此，当assay根据coldata进行折叠时，coldata也会进行相应折叠。如果coldata的数据属于连续型变量，则和assay使用相同的方法进行计算；如果coldata的数据属于字符串变量，则使用collapse_sep指定的符号进行合并。 MAE |> EMP_assay_extract(experiment='taxonomy') |> EMP_collapse(collapse_by='col',estimate_group = 'Group', method = 'mean',collapse_sep = '+') |> EMP_coldata_extract() 5.1.2 根据重复的rowdata合并assay EMP_collapse 可以将assay按照rowdata进行折叠。 &#x1F3F7;️示例1： 按照rowdata的Class列合并assay。 在微生物组学中，输入MAE对象内的微生物物种数据通常为最高分类级别的数据（例如：种或株级别）。EMP_collapse可以通过指定参数estimate_group，将assay的feature按照rowdata内较高的分类级别快速折叠为较低分类级别（例如：门或属级别）。 注意： 将assay按照rowdata折叠后，assay的feature发生改变，但sample是不改变的。在本示例中，原本为species级别的feature被折叠为Class级别。 MAE |> EMP_assay_extract(experiment='taxonomy') |> EMP_collapse(collapse_by='row',estimate_group = 'Class', method = 'sum',collapse_sep = '+') &#x1F3F7;️示例2：按照rowdata的特定列合并assay。 注意： ①在代谢组学项目中，代谢物通常有多种注释方式，我们可以快速按照rowdata中代谢物的注释级别对assay进行数据折叠。②用于折叠的feature必须存在于rowdata中（例如，组学项目geno_ko的assay无法按照rowdata中的Class列进行折叠）。用户可以使用模块EMP_rowdata_extract查看可用于合并的feature。 折叠前的assay： MAE |> EMP_assay_extract(experiment = 'untarget_metabol') 折叠后的assay：按照kegg二级代谢产物折叠后的assay。 注意： 在一些代谢组学原始数据中，经常出现NA、 null、 - 等符号（均表缺失值），使用参数na_string可以指定这些字符串为缺失值。在数据折叠时，如果在指定的用于合并的feature中出现缺失值，则该行数据将会被忽略。 MAE |> EMP_assay_extract(experiment = 'untarget_metabol') |> EMP_collapse(estimate_group = 'MS2kegg',collapse_by='row', na_string = c(\"NA\", \"null\", \"\",\"-\"), method = 'mean',collapse_sep = '+') Copyright © 382983280@qq.com 2024 all right reserved，powered by Gitbook更新时间： 2024-08-03 08:40:26 "},"MD/5.2 EMP_adjust_abudance.html":{"url":"MD/5.2 EMP_adjust_abudance.html","title":"5.2 EMP_adjust_abudance","keywords":"","body":"5.2 批次校正 EMP_adjust_abudance 批次效应（batch effect）是指在数据采集过程中由于各种因素导致的系统性变异，而与研究变量无关。批次效应通常由以下原因导致：实验的不同部分在不同时间完成、实验条件的变化（包括：仪器、试剂批次、试剂用量、测序批次等）、数据来源不同（例如：将自己的数据集与公共数据集整合分析）等。批次效应的存在可能对数据分析和结果解释产生影响，而寻常的标准化方法不足以调整批次之间的差异。模块EMP_adjust_abudance可帮助用户有效地解决批次效应的校正问题，其包含了三种最常用的校正方法：combat_seq、combat和limma_remove_batch_effect。这些方法均可以通过缩小批次效应来提高数据的可比性和可靠性。 注意：在进行批次校正前，需要将不同批次的组学项目数据整合在一个数据文件中。 5.2.1 combat方法 该模块引用了sva包的 comBat 算法用于校正批次效应。comBat使用参数或非参数经验贝叶斯模型来校正批次效应，输入的数据为已经清洗、标准化的表达数据，返回的是一个已针对批次效应进行校正的表达矩阵。 &#x1F3F7;️示例： 使用模块EMP_assay_extract提取组学项目geno_ko的assay，并利用模块EMP_adjust_abudance中的参数.factor_unwanted指定不感兴趣的因素（即：需要进行批次校正的因素）是Region，参数.factor_of_interest指定感兴趣的因素是'Group'，参数method指定使用'combat'方法进行批次效应校正。 MAE |> EMP_assay_extract(experiment='geno_ko') |> EMP_adjust_abundance(.factor_unwanted = 'Region',.factor_of_interest = 'Group', method = 'combat') 5.2.2 combat_seq方法 该模块引用了sva包的 comBat_seq 模块用于校正批次效应。comBat_seq 是 combat的改进模型，使用负二项式回归，专门针对 RNA-Seq 计数数据。 &#x1F3F7;️示例： MAE |> EMP_assay_extract(experiment='geno_ko') |> EMP_adjust_abundance(.factor_unwanted = 'Region',.factor_of_interest = 'Group', method = 'combat_seq') 5.2.3 limma_remove_batch_effect方法 该模块引用了limma包的 removeBatchEffect 模块用于校正批次效应。该模块通常用于微阵列数据或RNA测序数据批次效应的去除。 &#x1F3F7;️示例： MAE |> EMP_assay_extract(experiment='geno_ko') |> EMP_adjust_abundance(.factor_unwanted = 'Region',.factor_of_interest = 'Group', method = 'limma_remove_batch_effect') Copyright © 382983280@qq.com 2024 all right reserved，powered by Gitbook更新时间： 2024-08-03 08:40:26 "},"MD/5.3 EMP_feature_convert.html":{"url":"MD/5.3 EMP_feature_convert.html","title":"5.3 EMP_feature_convert","keywords":"","body":"5.3 实验数据的特征转换 EMP_feature_convert 在组学研究中，基因的命名方式因所使用的数据库不同而不固定。因此，在进行转录组学富集分析时，需要将基因名称转换为其对应的唯一编号（通常称ENTREZID）。而在代谢组学分析中，同样存在着多个数据库之间的编号转换问题。EMP_feature_convert提供了基因ID和代谢物ID在多个数据库之间的便捷转换。 5.3.1 用于基因ID的转换 &#x1F3F7;️示例： 转换前： MAE |> EMP_assay_extract(experiment='host_gene') 转换后： 注意： 本包内置了Human,Mouse,Pig,Zebrafish四个常用物种的参考基因集。如果数据为其他物种，可以使用OrgDb参数指定对应的参考数据集。更多物种详情点击此处。 MAE |> EMP_assay_extract(experiment='host_gene') |> EMP_feature_convert(from = 'SYMBOL',to = 'ENTREZID',species = 'Human') 5.3.2 用于代谢物ID的转换 &#x1F3F7;️示例： 转换前： MAE |> EMP_assay_extract(experiment = 'untarget_metabol')|> EMP_collapse(na_string=c('NA','null','','-'), estimate_group = 'MS2kegg',method = 'sum',collapse_by = 'row') 转换后： 将代谢产物从KEGG的Compound注释，转换为Human Metabolome Database的ID注释。 MAE |> EMP_assay_extract(experiment = 'untarget_metabol'), EMP_collapse(na_string=c('NA','null','','-'), estimate_group = 'MS2kegg',method = 'sum',collapse_by = 'row') |> EMP_feature_convert(from = 'KEGG',to='HMDB') 5.3.3 微生物物种注释转换 微生物一般分为界门纲目科属种等多级注释。在分析流程中。经常会将其按照不同级别进行数据折叠，进行下游数据分析。但是由于存在个别重复注释，例如某些菌的属级注释一致而科级注释不一致的情况，因此本功能可以将各个级别微生物数据补全完整注释。（详细说明在 10.4章节） &#x1F3F7;️示例： 转换前： MAE |> EMP_assay_extract('taxonomy') |> EMP_collapse(estimate_group = 'Phylum',collapse_by = 'row') 转换后： 注意： 此函数仅能在微生物数据折叠前使用。 MAE |> EMP_assay_extract('taxonomy') |> EMP_feature_convert(from = 'tax_single',add = 'tax_full') |> EMP_collapse(estimate_group = 'Phylum',collapse_by = 'row') 5.3.4 增加特征相关疾病注释 本模块支持对SYMBOL,ENTREZID,ko 和 ec编号增加相关疾病注释。 &#x1F3F7;️示例： 增加人类疾病注释，并筛选出与癌症相关的基因 MAE |> EMP_assay_extract('host_gene') |> EMP_feature_convert(from = 'SYMBOL',add ='Human_disease') |> EMP_assay_extract(pattern = 'cancer',pattern_ref = 'Human_disease') Copyright © 382983280@qq.com 2024 all right reserved，powered by Gitbook更新时间： 2024-09-09 18:50:29 "},"MD/5.4 EMP_decostand.html":{"url":"MD/5.4 EMP_decostand.html","title":"5.4 EMP_decostand","keywords":"","body":"5.4 数据标准化 EMP_decostand 在多组学数据分析中，由于不同数据的量纲、量级存在差异，可能导致分析结果出现偏倚。因此，需要采用各种标准化方法来消除这些差异。EMP_decostand继承了vegan包的模块decostand，可以便捷地使用对数比、相对值、中心对数比等方法进行数据标准化。 注意:模块EMP_decostand中的参数bySample可以指定按照样本内标准化或者按照特征内标准化。不做特殊设定时，参数bySample将按照vegan包内的建议执行。 5.4.1 微生物数据标准化 &#x1F3F7;️示例：提取组学项目taxonomy的assay并按照rowdata的Family列进行折叠，将折叠后assay的feature的绝对丰度转化为相对丰度。 MAE |> EMP_collapse(experiment='taxonomy',estimate_group = 'Family',collapse_by = 'row') |> EMP_decostand(method = 'relative') 5.4.3 基因组数据标准化 &#x1F3F7;️示例：提取组学项目host_gene的assay并进行log转换。 注意： 当使用log、pa和integer标准化方法时，无需考虑标准化方向。 MAE |> EMP_decostand(experiment = 'host_gene',method = 'log',logbase = 2) Copyright © 382983280@qq.com 2024 all right reserved，powered by Gitbook更新时间： 2024-08-03 22:56:02 "},"MD/5.5 EMP_impute.html":{"url":"MD/5.5 EMP_impute.html","title":"5.5 EMP_impute","keywords":"","body":"5.5 数据插补 EMP_impute 数据插补是指当数据集中存在缺失值时，通过算法对这些缺失值进行估计或填充的过程。其目的是在缺失值的位置上提供合理的估计值，从而在后续的数据分析或建模过程中更好地利用这些数据。EMP_impute 模块基于链式随机森林（Chained Random Forests, CRF）算法进行数据插补，该算法比传统的均值或众数插补方法更具科学性，不仅可以用于插补连续型变量，还可以用于插补分类变量。模块EMP_impute 支持对 assay、rowdata 和 coldata 进行数据插补。 5.5.1 插补样本相关数据coldata 组学项目的coldata是指样本相关数据，经常会出现不同程度数据缺失。导致缺失值的常见原因包括：数据采集过程出现错误或遗漏、受试者中途退出研究、技术问题（例如：设备故障或数据传输错误）等。模块EMP_impute可以基于CRF算法对coldata的缺失值进行插补。 &#x1F3F7;️示例： 插补前：coldata存在大量缺失值。 MAE |> EMP_assay_extract('geno_ec') |> EMP_coldata_extract() 插补后：对coldata的所有缺失值进行插补。 MAE |> EMP_assay_extract('geno_ec') |> EMP_impute() |> EMP_coldata_extract() 也可以只对coldata的部分缺失值进行插补。例如：只对PHQ9和GAD7的缺失值进行插补。 MAE |> EMP_assay_extract('geno_ec') |> EMP_impute(.formula = PHQ9+GAD7 ~ .) |> EMP_coldata_extract() 5.5.2 插补实验数据assay 当assay不存在缺失值时，使用模块EMP_impute进行插补会提示\"Assay data has no NA value！\"。 MAE |> EMP_assay_extract('geno_ec') |> EMP_impute(coldata = F,assay = T) 5.5.3 插补特征相关数据rowdata 组学项目的rowdata是指特征相关数据，其缺失值的产生主要是由于数据库注释不完善导致。因此，尽管模块EMP_impute支持使用参数rowdata=T进行rowdata的插补，但是插补的结果难以满足实际需要，因此不建议插补rowdata。 Copyright © 382983280@qq.com 2024 all right reserved，powered by Gitbook更新时间： 2024-08-03 08:40:26 "},"MD/5.6 EMP_identify_assay.html":{"url":"MD/5.6 EMP_identify_assay.html","title":"5.6 EMP_identify_assay","keywords":"","body":"5.6 确定核心数据 EMP_identify_assay 传统的组学项目数据中经常存在着大量的稀疏特征（例如：微生物OTU/ASV注释表有着大量丰度极低的菌种），这些稀疏特征可能是由样本污染、建库错误、测序偏倚或者注释失败等原因导致。为了简化计算和减少这些稀疏特征的干扰，本模块提供了两种方法对原始数据进行过滤。 5.6.1 核心微生物数据 在微生物物种注释结果中，可以发现存在相当多的”稀有物种“（相对丰度较低或者在样本中出现的频率较低），对于识别组间具有差异性的物种造成极强的干扰，尤其是在筛选关键物种时，机器学习算法(例如：随机森林、LEFse）很容易将这些“稀有物种”识别为组间的“差异物种”。因此，有必要在正式分析前将这些“稀有物种”根据统一的标准进行过滤。EMP_identify_assay模块引入了两个重要参数帮助过滤：minnum（最小相对丰度）和min_ratio（最小占比）。首先，在微生物数据中，低于指定“最小相对丰度”的任何丰度都会转换为 0。随后，当某个物种在任意一组样本中高于”最小相对丰度“的样本数量占该分组下样本总数量的比例大于”最小占比“时，该物种就被认为是”核心物种“，而其余物种都被归类为“稀有物种”并被过滤掉。 &#x1F3F7;️示例： 使用模块EMP_assay_extract提取组学项目taxonomy的assay。使用模块EMP_identify_assay过滤获取“核心物种”，参数estimate_group指定将Group作为分组信息，参数min指定“最小相对丰度”为0.01，参数min_ratio指定最小占比为0.7。 注意： 当输入的微生物物种注释数据为绝对丰度时，在计算过程中，模块EMP_identify_assay会自动将其转换为相对丰度，以便在计算过程中进行过滤和获取核心物种，并根据过滤条件重新输出对应的绝对丰度的数据。 MAE |> EMP_assay_extract('taxonomy') |> EMP_identify_assay(estimate_group = 'Group', method = 'default', min=0.01,min_ratio = 0.7) 5.6.2 核心基因组数据 在基因组数据中，edgeR包提供了一种基于“最小丰度值”的过滤方法，模块EMP_assay_extract可以十分便捷地调用该方法对基因组/转录组等数据进行过滤。 &#x1F3F7;️示例： MAE |> EMP_assay_extract('geno_ec') |> EMP_identify_assay(method = 'edgeR',min = 10,min_ratio = 0.7,estimate_group = 'Group') Copyright © 382983280@qq.com 2024 all right reserved，powered by Gitbook更新时间： 2024-08-03 21:32:49 "},"MD/5.7 EMP_modify_assay.html":{"url":"MD/5.7 EMP_modify_assay.html","title":"5.7 EMP_modify_assay","keywords":"","body":"5.7 调整数据 EMP_modify_assay 通常情况下，模块EMP_identify_assay能有效处理实验数据。然而在某些特殊情况下，需要手动调整数据以解决问题。 5.7.1 调整基因组数据 在基因表达数据中，有时会出现某些特征的表达量全部为零的情况，这可能会导致一些问题。为了尽可能保留信息，有时会将这些零值替换为一个极小的非零值。这样可以在一定程度上保持数据的结构，同时避免数值计算中的错误。 &#x1F3F7;️示例1：使用模块EMP_assay_extract将组学项目geno_ec的assay中的零值替换为伪计数0.0001。 调整数据前： MAE |> EMP_assay_extract('geno_ec') 调整数据后： MAE |> EMP_assay_extract('geno_ec') |> EMP_modify_assay('==0',pseudocount=0.0001) &#x1F3F7;️示例2：使用模块EMP_modify_assay将组学项目geno_ec的assay中小于阈值10的绝对丰度值转换为伪计数5。 MAE |> EMP_assay_extract('geno_ec') |> EMP_modify_assay(' &#x1F3F7;️示例3：选择特定的样本和特征进行数据调整。 注意： 参数select_feature和参数select_sample可以针对特定样本和特征的数据进行调整。 ```R MAE |> EMP_assay_extract('geno_ec') |> EMP_modify_assay('==0',pseudocount=0.0001, select_feature = c('1.1.1.102','1.1.1.11'), select_sample = c('P11774','P31579')) ``` ![](../tutorial_figs/ec_modify3.jpg) ### 5.7.2 调整微生物物种注释数据 在微生物物种注释数据中经常出现一些丰度极小的菌种，这种情况可能由污染、测序或者数据库比对错误导致。有时需要将这些丰度极小的数据转换为0。 注意： 本示例仅做模块功能展示，如需过滤微生物物种注释数据，请参考5.6 EMP_identify_assay。 &#x1F3F7;️示例：使用模块EMP_modify_assay将属级别相对丰度小于千分之一的数据转换为0。 调整数据前: MAE |> EMP_assay_extract('taxonomy') |> EMP_collapse(estimate_group = 'Genus',collapse_by='row') |> EMP_decostand(method = 'relative') 调整后数据： Copyright © 382983280@qq.com 2024 all right reserved，powered by Gitbook更新时间： 2024-08-03 21:32:58 "},"MD/5.8 EMP_rrarefy.html":{"url":"MD/5.8 EMP_rrarefy.html","title":"5.8 EMP_rrarefy","keywords":"","body":"5.8 数据重抽样 EMP_rrarefy 在进行二代高通量测序时，不同样本的测序深度存在差异。特别是在进行微生物组学数据分析时，通常会以数据内样本的最小测序深度为标准，对全部样本的数据进行有放回的重抽样，以确保全部样本的测序深度在一个水平上。 5.8.1 显示当前组学测序深度 &#x1F3F7;️示例： MAE |> EMP_rrarefy(experiment = 'taxonomy',only_show_depth=T) 5.8.2 按照当前数据内样本的最小测序深度重抽样 注意： 由于全部样本均达到最小测序深度阈值，因此模块EMP_rrarefy不会过滤任何样本。 &#x1F3F7;️示例： MAE |> EMP_rrarefy(experiment = 'taxonomy') 5.8.3 按照指定测序深度重抽样 注意： 用户可以通过指定参数raresize来自定义测序深度阈值，任何低于该测序深度阈值的样本均会被过滤。同时，部分特征在重抽样后，在所有样本中均不存在（即数据为0），这些特征也会被过滤。 MAE |> EMP_rrarefy(experiment = 'taxonomy',raresize=8000) Copyright © 382983280@qq.com 2024 all right reserved，powered by Gitbook更新时间： 2024-08-03 08:40:26 "},"MD/6 Data Analysis.html":{"url":"MD/6 Data Analysis.html","title":"Chapter 6 Data Analysis","keywords":"","body":"6. 数据分析 Data Analysis : 欢迎阅读本章教程，本教程旨在为用户提供全面的数据分析指南。通过本教程，用户将学习如何使用多种数据分析方法处理多组学数据，包括不限于数据标准化、数据折叠、差异性分析、关联分析、富集分析、特征筛选等主流生物信息学分析手段。各个功能模块可以轻松无缝对接，使整个分析流程标准化和清晰化，确保分析结果的科学性和可重复性。 Copyright © 382983280@qq.com 2024 all right reserved，powered by Gitbook更新时间： 2024-08-19 20:20:23 "},"MD/6.1 EMP_alpha_analysis.html":{"url":"MD/6.1 EMP_alpha_analysis.html","title":"6.1 EMP_alpha_analysis","keywords":"","body":"6.1 α多样性分析 EMP_alpha_analysis alpha多样性分析是最常用的微生物下游分析方法之一，主要用于评估物种的丰富度。模块EMP_alpha_analysis基于相对丰度数据，内置了六种常见的alpha多样性分析方法（包括：shannon指数、simpson指数、invsimpson指数、observerd_index、chao1、和ACE），并提供了常规的统计分析和可视化功能。 6.1.1 使用绝对丰度进行多样性分析 &#x1F3F7;️示例： MAE |> EMP_assay_extract(experiment='taxonomy') |> EMP_alpha_analysis() 6.1.2 使用相对丰度进行多样性分析 注意： 当使用相对丰度时，部分alpha指数（例如：ACE、chao1）将无法计算。 &#x1F3F7;️示例： MAE |> EMP_assay_extract(experiment='taxonomy') |> EMP_decostand(method = 'relative') |> EMP_alpha_analysis() 6.1.3 对接可视化差异性分析 注意： 模块EMP_boxplot可通过指定参数select_metrics来筛选所需的alpha多样性指标。 &#x1F3F7;️示例： MAE |> EMP_assay_extract(experiment='taxonomy') |> EMP_alpha_analysis() |> EMP_boxplot(estimate_group='Group',method='t.test') Copyright © 382983280@qq.com 2024 all right reserved，powered by Gitbook更新时间： 2024-08-03 21:49:48 "},"MD/6.2 EMP_cluster_analysis.html":{"url":"MD/6.2 EMP_cluster_analysis.html","title":"6.2 EMP_cluster_analysis","keywords":"","body":"6.2 聚类分析 EMP_cluster_analysis 聚类分析属于机器学习中非监督学习的范畴，其不需要预先设置分组，而是根据数据本身的特性研究分类方法，并遵循这个分类方法对数据进行合理的分类，最终将相似数据分为一组，从而帮助用户发现数据的模式和结构，识别离群值。 6.2.1 根据assay对样本进行聚类分析 &#x1F3F7;️示例： MAE |> EMP_assay_extract(experiment = 'geno_ec') |> EMP_cluster_analysis() 可以通过指定参数h，进行聚类分组标记。 MAE |> EMP_assay_extract(experiment = 'geno_ec') |> EMP_cluster_analysis(h=0.15) 使用模块EMP_filter对分组为1和4的离群样本进行过滤。 MAE |> EMP_assay_extract(experiment = 'geno_ec') |> EMP_cluster_analysis(h=0.15) |> EMP_filter(sample_condition = cluster != c(1,4)) 6.2.2 根据assay对特征进行聚类分析 EMP_cluster_analysis也可以对特征进行聚类分析，以快速发现感兴趣的特征之间的层级关系。 &#x1F3F7;️示例：查找酒精相关的KO基因，对特征进行聚类分析。 注意：本示例是通过查找rowdata的Name列中的字符串，以确定包含alcohol的KO基因，而并非根据知识图谱确定的与跟酒精相关的基因。 MAE |> EMP_assay_extract(experiment='geno_ko', pattern = 'alcohol',pattern_ref = 'Name') |> EMP_cluster_analysis(rowdata = T) 6.2.3 根据coldata对样本进行聚类分析 在临床数据分析中，受试者的样本相关数据通常包含基本信息（例如：饮食数据、量表数据等）。模块EMP_colda_extract可以通过指定参数action='add'将coldata转换成assay，从而进行下游分析。 &#x1F3F7;️示例： 注意： ①当coldata样本相关数据较多时，可以使用参数coldata_to_assay选择所需要转换的样本相关数据。如果未指定，则默认将coldata中全部的连续型变量转换为assay。 ②当因部分特征的缺失值导致计算部分样本间距离为缺失时，将自动取最大默认值1。用户可以使用参数pseudodist修改默认值，或者使用EMP_impute模块在聚类分析前插补缺失值。 MAE |> EMP_coldata_extract(action = 'add', coldata_to_assay = c('SAS','SDS','HAMA','HAMD','PHQ9','GAD7')) |> EMP_cluster_analysis() MAE |> EMP_coldata_extract(action = 'add', coldata_to_assay = c('SAS','SDS','HAMA','HAMD','PHQ9','GAD7')) |> EMP_cluster_analysis(rowdata=TRUE) Copyright © 382983280@qq.com 2024 all right reserved，powered by Gitbook更新时间： 2024-08-03 23:11:55 "},"MD/6.3 EMP_cor_analysis.html":{"url":"MD/6.3 EMP_cor_analysis.html","title":"6.3 EMP_cor_analysis","keywords":"","body":"6.3 相关性分析 EMP_cor_analysis 多组学数据分析中，经常通过相关系数矩阵来观察特征之间的相互关系。 注意： 本模块在计算相关性时，会自动选择两个组学项目数据中无缺失值的交集进行分析。 6.3.1 探索微生物数据与样本相关数据的相关性 &#x1F3F7;️示例1：微生物物种注释数据与量表评分数据的相关性分析。 提取组学项目taxnomy的assay，利用模块EMP_identify_assay筛选核心微生物，利用模块EMP_collapse折叠出属级别数据，利用模块EMP_decostand进行相对丰度的标准化。 micro_data EMP_assay_extract('taxonomy') |> EMP_identify_assay(method='default') |> EMP_collapse(estimate_group = 'Genus',collapse_by = 'row') |> EMP_decostand(method='relative') micro_data 然后，从MAE对象中提取组学项目taxnomy的assay，并进一步提取对应的coldata的量表评分数据。 meta_data EMP_assay_extract('taxonomy') |> EMP_coldata_extract(action = 'add', coldata_to_assay = c('SAS','SDS','HAMA','HAMD','PHQ9','GAD7')) meta_data 最后，使用+符号将微生物丰度数据和量表评分数据合并成EMP对象，使用EMP_cor_analysis和EMP_heatmap_plot模块完成相关性分析及可视化。 (micro_data + meta_data) |> EMP_cor_analysis() |> EMP_heatmap_plot(label_size=2,palette='Spectral', clust_row=TRUE,clust_col=TRUE) &#x1F3F7;️示例2：分析微生物之间的相互关系，即只选择一个组学构建自相关分析。 注意： ①这里使用NULL可以构建只有一个组学的EMP对象。 ②当EMP对象中仅包含一个组学时，将执行自相关计算。 ③如需绘制菌群的共发生网络图，可以先使用参数action='get'获得相关性邻接矩阵，再导入到专业的网络分析工具（例如：Cytoscape 、MENA和Gephi等工具）进一步分析。 (micro_data + NULL) |> EMP_cor_analysis() |> EMP_heatmap_plot(label_size=1,palette='Spectral',clust_row=TRUE,clust_col=TRUE) 6.3.2 探索微生物差异功能基因与宿主差异基因表达的相关性 &#x1F3F7;️示例：微生物差异功能基因与宿主差异基因表达的相关性分析。 首先，从MAE对象中提取微生物差异功能的KO基因集，利用模块EMP_identify_assay过滤稀疏基因，利用模块EMP_diff_analysis 进行DESeq2差异性分析并考虑区域因素导致的批次问题，筛选出p值小于0.05的差异KO。 ko_data EMP_assay_extract('geno_ko') |> EMP_identify_assay(method='edgeR') |> EMP_diff_analysis(method='DESeq2',.formula = ~Region+Group) |> EMP_filter(feature_condition = pvalue 其次，从MAE对象中提取宿主转录组基因集，利用模块EMP_identify_assay过滤稀疏基因，利用模块EMP_diff_analysis 进行DESeq2差异性分析并考虑区域因素导致的批次问题，筛选出p值小于0.05的差异KO。 host_gene EMP_assay_extract('host_gene') |> EMP_identify_assay(method='edgeR') |> EMP_diff_analysis(method='DESeq2',.formula = ~Region+Group) |> EMP_filter(feature_condition = pvalue 最后，直接使用+符号将两个组学数据合并成EMP对象，使用模块EMP_cor_analysis和模块EMP_heatmap_plot完成相关性分析及可视化。 (ko_data + host_gene) |> EMP_cor_analysis() |> EMP_heatmap_plot() 6.3.3 探索多重相关性 模块EMP_cor_analysis能够计算多个组学项目数据之间的相互关系。我们可以分别计算各个组学项目数据之间的差异特征，使用+符号将组学合并在一起，并按照组合顺序进行相关性检验。模块EMP_sankey_plot可以根据多重相关性结果，绘制相关性桑基图。 注意： ①相关性桑基图中，红色为正相关，蓝色为负相关。 ②相关性桑基图会评估每个节点之间的相互关系，孤立的节点将会被过滤。 ③参数pvalue和rvalue可以调节边的数量。 &#x1F3F7;️示例：探索微生物-功能基因-代谢产物-宿主基因-样本相关数据之间的多重相关性。 micro_data EMP_assay_extract('taxonomy') |> EMP_identify_assay(method='default') |> EMP_collapse(estimate_group = 'Genus',collapse_by = 'row') |> EMP_decostand(method='relative') ko_data EMP_assay_extract('geno_ko') |> EMP_identify_assay(method='edgeR') |> EMP_diff_analysis(method='DESeq2',.formula = ~Region+Group) |> EMP_filter(feature_condition = pvalue EMP_assay_extract(experiment = 'untarget_metabol') |> EMP_collapse(estimate_group = 'MS2kegg',collapse_by='row', na_string = c(\"NA\", \"null\", \"\",\"-\"), method = 'mean',collapse_sep = '+') |> EMP_decostand(method = 'relative') |> EMP_dimension_analysis(method = 'pls',estimate_group = 'Group') |> EMP_filter(feature_condition = VIP >2) host_gene EMP_assay_extract('host_gene') |> EMP_identify_assay(method='edgeR') |> EMP_diff_analysis(method='DESeq2',.formula = ~Region+Group) |> EMP_filter(feature_condition = pvalue EMP_assay_extract('taxonomy') |> EMP_coldata_extract(action = 'add', coldata_to_assay = c('SAS','SDS','HAMA','HAMD','PHQ9','GAD7')) (micro_data + ko_data + metabolite_data + host_gene + meta_data) |> EMP_cor_analysis() |> EMP_sankey_plot() Copyright © 382983280@qq.com 2024 all right reserved，powered by Gitbook更新时间： 2024-08-03 23:22:14 "},"MD/6.4 EMP_diff_analysis.html":{"url":"MD/6.4 EMP_diff_analysis.html","title":"6.4 EMP_diff_analysis","keywords":"","body":"6.4 差异性分析 EMP_diff_analysis 模块EMP_diff_analysis支持实验数据在不同分组条件下的差异性分析，涵盖多种统计检验方法，包括T检验、Wilcoxon检验、单因素方差分析（one-way.test）、Kruskal-Wallis检验、DESeq2、edgeR和limma等。该模块不仅支持多核并行运算以提升效率，还具备缓存快照功能（即：在重复使用相同参数进行计算时，系统将自动提取已缓存的结果，无需重新计算）。 6.4.1 传统统计学方法 &#x1F3F7;️示例1：使用T检验计对属级别的核心微生物数据进行差异性分析，并对p值进行Bonferroni多重检验校正。 注意：①在分组为两组的情况下， sign_group显示的组别仅代表该特征在所述组别中的均值高于另一组别，但并不涉及统计检验。在本示例中，针对特征列的Alistipes，sign_Group为Group_B表示特征Alistipes在Group_B中的均值高于Group_A；结合pvalue列，T检验的p值为0.167，经Bonferroni校正后的p值为1，表明该特征在组间的差异不具有统计学意义。②在分组超过两组的情况下， sign_group显示的组别仅代表该特征在所涉及组别中均值最高的分组，但并不涉及统计检验。pvalue列的p值小于0.05代表所涉及组别的均值不全相同，如果想要明确具体哪些分组的均值具有统计学差异，需要进行两两比较。 ③在计算两组间均值比值时，如果其中一个特征的值为0，则默认采用另一组对应特征的千分之一赋值，则这种情况下比值为1000或者0.001。 MAE |> EMP_assay_extract('taxonomy') |> EMP_identify_assay(method='default',estimate_group = 'Group') |> EMP_collapse(estimate_group = 'Genus',collapse_by = 'row') |> EMP_diff_analysis(method='t.test',estimate_group = 'Group',p.adjust = 'bonferroni') &#x1F3F7;️示例2：在分组超过两组的情况下，使用 oneway.test或者kruskal.test进行统计检验。 注意： ①在分组超过两组或者输入数据不是couts、relative、integer时，将无法提供fold_change、VSlog2FC等信息。 ②EMP_diff_analysis继承了R内置stats包的方法，可以在模块内增加其参数进行调整。 6.4.2 DESeq2、edgeR和limma等方法 &#x1F3F7;️示例1：使用DESeq2对宿主基因数据集按照性别进行差异性分析。 注意： 在使用这些方法时，不再使用estimate_group参数来指定分组信息，而是遵循所继承包的习惯语法.formula。 MAE |> EMP_assay_extract('host_gene') |> EMP_diff_analysis(method='DESeq2',.formula = ~Sex) &#x1F3F7;️示例2：使用edgeR的几种模式方法。 MAE |> EMP_assay_extract('host_gene') |> EMP_diff_analysis(method='edgeR_quasi_likelihood',.formula = ~Sex) MAE |> EMP_assay_extract('host_gene') |> EMP_diff_analysis(method='edgeR_likelihood_ratio',.formula = ~Sex) &#x1F3F7;️示例3：更多方法可以尝试。 MAE |> EMP_assay_extract('host_gene') |> EMP_diff_analysis(method='edger_robust_likelihood_ratio',.formula = ~Sex) MAE |> EMP_assay_extract('host_gene') |> EMP_diff_analysis(method='limma_voom',.formula = ~Sex) MAE |> EMP_assay_extract('host_gene') |> EMP_diff_analysis(method='limma_voom_sample_weights',.formula = ~Sex) 6.4.3 差异性分析结果过滤及可视化 模块EMP_filter可以帮助快速筛选分析结果，详细用法参见 模块EMP_filter帮助文档。 注意：这里的参数keep_result，详情请参看章节7.1.3 MAE |> EMP_assay_extract('geno_ko') |> EMP_diff_analysis(method='DESeq2',.formula = ~Group) |> EMP_filter(feature_condition = pvalue 1.5, keep_result = 'EMP_diff_analysis') 将差异性分析结果绘制成火山图。 注意： 在EMP_volcanol_plot中增加show='html'可以提供可交互式图形，便于快速确定差异特征的具体信息。详见8.10 EMP_vocanol_plot。 MAE |> EMP_decostand(experiment = 'geno_ec',method = 'integer') |> EMP_diff_analysis(method='DESeq2',.formula = ~Group) |> EMP_volcanol_plot(key_feature = c('3.6.1.62','1.5.3.19'), min.segment.length = 0, seed = 42, box.padding = 0.5) ## Add arrow Copyright © 382983280@qq.com 2024 all right reserved，powered by Gitbook更新时间： 2024-11-04 00:06:08 "},"MD/6.5 EMP_dimension_analysis.html":{"url":"MD/6.5 EMP_dimension_analysis.html","title":"6.5 EMP_dimension_analysis","keywords":"","body":"6.5 降维分析 EMP_dimension_analysis 模块EMP_dimension_analysis支持多维数据的降维分析，降维方法包含主成分分析PCA、主坐标分析PCoA、偏最小二乘回归PLS和正交偏最小二乘回归OPLS四种方法。 6.5.1 微生物beta多样性分析及可视化 &#x1F3F7;️示例： 从MAE对象中提取组学项目taxonomy的assay，利用EMP_identify_assay筛选核心微生物，利用EMP_collapse将核心微生物折叠为属级别数据，利用EMP_dimension_analysis进行PCoA降维分析。 MAE |> EMP_assay_extract('taxonomy') |> EMP_identify_assay(method='default',estimate_group = 'Group') |> EMP_collapse(estimate_group = 'Genus',collapse_by = 'row') |> EMP_dimension_analysis(method = 'pcoa',distance='bray') 降维分析的结果可以使用EMP_scatterplot进行可视化。 注意： 参数show支持从p12、p13、p23三个维度呈现降维结果，并提供html交互式图形。 MAE |> EMP_assay_extract('taxonomy') |> EMP_identify_assay(method='default',estimate_group = 'Group') |> EMP_collapse(estimate_group = 'Genus',collapse_by = 'row') |> EMP_dimension_analysis(method = 'pcoa',distance='bray') |> EMP_scatterplot(estimate_group='Group',show='p12html',ellipse=0.3) 6.5.2 代谢组学数据PLS降维分析和特征代谢产物筛选 &#x1F3F7;️示例： 从MAE对象中提取组学项目untarget_metabol的assay，根据二级代谢产物KEGG注释折叠数据并进行相对丰度转化，进行PLS降维分析、获取代谢产物的降维坐标及VIP值，根据VIP值筛选特征代谢产物。 MAE |> EMP_assay_extract(experiment = 'untarget_metabol') |> EMP_collapse(estimate_group = 'MS2kegg',collapse_by='row', na_string = c(\"NA\", \"null\", \"\",\"-\"), method = 'mean',collapse_sep = '+') |> EMP_decostand(method = 'relative') |> EMP_dimension_analysis(method = 'pls',estimate_group = 'Group') |> EMP_filter(feature_condition = VIP >2) 6.5.3 KO注释数据的UMAP降维分析 &#x1F3F7;️示例1： 使用UMAP算法进行数据降维 MAE |> EMP_dimension_analysis(experiment = 'geno_ko', method = 'umap') &#x1F3F7;️示例2： 修改UMAP算法运行参数 从 umap包内获得参数文件 umap.config 在模块函数中输入参数设置文件 MAE |> EMP_dimension_analysis(experiment = 'geno_ko', method = 'umap', umap.config = umap.config) Copyright © 382983280@qq.com 2024 all right reserved，powered by Gitbook更新时间： 2024-09-16 01:25:08 "},"MD/6.6 EMP_enrich_analysis.html":{"url":"MD/6.6 EMP_enrich_analysis.html","title":"6.6 EMP_enrich_analysis","keywords":"","body":"6.6 富集分析 EMP_enrich_analysis KEGG（Kyoto Encyclopedia of Genes and Genomes）富集分析是一种生物信息学方法，用于确定一组基因或蛋白质在特定的生物学通路或功能中是否显著富集。KEGG数据库包含了大量的基因和基因产物的功能信息，以及这些基因在代谢通路、信号传导通路和疾病通路中的作用。本模块可以在线读取KEGG数据库信息，完成富集分析的常规步骤。 6.6.1 基于KO/EC注释的KEGG富集分析 宏基因组微生物数据分析过程中可以得到KO/EC的功能基因注释结果，使用模块EMP_diff_analysis可获取差异基因，并利用模块EMP_enrich_analysis进行KEGG富集分析。 注意： ①参数KEGG_Type可以指定按照pathway富集（KEGG_Type = 'KEGG'）或者Module富集(KEGG_Type = 'MKEGG')。 ②参数species默认使用全物种数据作为背景基因(species = 'all')，也可以指定具体物种数据作为背景基因进行富集。 ③参数condition根据pvalue或者校正p值筛选差异基因，并进行富集。 &#x1F3F7;️示例1： MAE |> EMP_assay_extract(experiment = 'geno_ec') |> EMP_diff_analysis(method='DESeq2',.formula = ~Group) |> EMP_enrich_analysis(condition = pvalue &#x1F3F7;️示例2：模块EMP_dotplot和EMP_netplot继承了enrichplot包的dotplot和cnetplot，可以对富集分析的结果进行可视化。 MAE |> EMP_assay_extract(experiment = 'geno_ec') |> EMP_diff_analysis(method='DESeq2',.formula = ~Group) |> EMP_enrich_analysis(condition = pvalue EMP_dotplot() MAE |> EMP_assay_extract(experiment = 'geno_ec') |> EMP_diff_analysis(method='DESeq2',.formula = ~Group) |> EMP_enrich_analysis(condition = pvalue EMP_netplot() 6.6.2 基于基因名称的的KEGG富集分析 这类数据常见于宿主组织的Bulk 转录组数据。在进行分析前，需要使用模块EMP_feature_convert将基因的symbol转换成entrezid。 &#x1F3F7;️示例： MAE |> EMP_assay_extract(experiment = 'host_gene') |> EMP_feature_convert(from = 'symbol',to='entrezid',species='Human') |> EMP_diff_analysis(method = 'DESeq2', .formula = ~Group,p.adjust = 'fdr') |> EMP_enrich_analysis(keyType ='entrezid', KEGG_Type ='KEGG',pvalue 6.6.3 基于代谢产物的KEGG富集分析 这类数据主要是代谢组学产生，富集分析前需要将特征名称转换为compund ID。 &#x1F3F7;️示例： MAE |> EMP_assay_extract(experiment = 'untarget_metabol')|> EMP_collapse(na_string=c('NA','null','','-'), estimate_group = 'MS2kegg',method = 'sum',collapse_by = 'row') |> EMP_diff_analysis(method='DESeq2',.formula = ~Group) |> EMP_enrich_analysis(keyType ='cpd', KEGG_Type ='KEGG',pvalue Copyright © 382983280@qq.com 2024 all right reserved，powered by Gitbook更新时间： 2024-11-03 23:22:12 "},"MD/6.7 EMP_marker_analysis.html":{"url":"MD/6.7 EMP_marker_analysis.html","title":"6.7 EMP_marker_analysis","keywords":"","body":"6.7 标志物分析 EMP_marker_analysis 模块EMP_marker_analysis旨在利用机器学习算法寻找多组学数据内的关键特征。需注意，在组学数据分析中，机器学习模型主要有两种用途：第一种是利用机器学习算法筛选具有潜在标志物能力的特征；第二种是基于组学数据构建机器学习预测模型，用于辅助区分不同的组别。由于构建预测模型往往需要多种调参优化，粗暴地使用默认参数常常难以得到理想的结果。因此，模块EMP_marker_analysis的设计目的是帮助用户快速筛选潜在标志物，而非专注于构建和优化预测模型。 6.7.1 基于Boruta算法估计特征的重要性 &#x1F3F7;️示例： 使用Boruta算法可以根据coldata中的分类，快速将数据中的特征分为Confirmed, Tentative和Rejected三类。 MAE |> EMP_marker_analysis(experiment = 'geno_ec',method = 'boruta', estimate_group = 'Group') 可以使用EMP_filter模块快速筛选所需要的特征，便于其他下游分析。 注意： EMP_filter适用于所有模型的筛选。 MAE |> EMP_marker_analysis(experiment = 'geno_ec',method = 'boruta', estimate_group = 'Group') |> EMP_filter(feature_condition = Boruta_decision != 'Rejected') 6.7.2 基于randomforest算法估计特征的重要性 &#x1F3F7;️示例1：基于随机森林分类进行特征的重要性评估。 MAE |> EMP_marker_analysis(experiment = 'geno_ec',method = 'randomforest', estimate_group = 'Group') &#x1F3F7;️示例2：基于随机森林回归进行特征的重要性评估。 MAE |> EMP_marker_analysis(experiment = 'geno_ec',method = 'randomforest', estimate_group = 'BMI') 6.7.3 基于xgboost算法估计特征的重要性 注意： ①使用xgboost算法时，需要通过参数objective指定模型。当参数estimate_group的指定值为二分类变量时，需指定参数objective = 'binary:logistic'；当参数estimate_group的指定值为多分类变量时,需指定参数objective = multi:softmax；参数estimate_group的指定值为连续型变量时,需指定参数objective = 'reg:squarederror'。更多详情请参考xgboost包。 ②进行分类模型时，必须指定参数xgboost_run='classify'。 ③进行回归模型时，必须指定参数xgboost_run='regression'。 ④参数xgboost_run指定错误将会导致计算结果错误。 &#x1F3F7;️示例1：基于xgboost分类算法进行特征重要性评估。 MAE |> EMP_marker_analysis(experiment = 'geno_ec',method = 'xgboost',xgboost_run='classify', estimate_group = 'Group',objective = 'binary:logistic') &#x1F3F7;️示例2：基于xgboost回归算法进行特征的重要性评估。 MAE |> EMP_marker_analysis(experiment = 'geno_ec',method = 'xgboost',xgboost_run='regression', estimate_group = 'BMI',objective = 'reg:squarederror') 6.7.4 基于Lasso算法估计特征的重要性 &#x1F3F7;️示例： MAE |> EMP_marker_analysis(experiment = 'geno_ec',method = 'lasso', estimate_group = 'BMI') Copyright © 382983280@qq.com 2024 all right reserved，powered by Gitbook更新时间： 2024-08-22 02:02:25 "},"MD/6.8 EMP_GSEA_analysis.html":{"url":"MD/6.8 EMP_GSEA_analysis.html","title":"6.8 EMP_GSEA_analysis","keywords":"","body":"6.8 GSEA富集分析 EMP_GSEA_analysis 基因集富集分析（Gene Set EnrichmentAnalysis, GSEA）的基本思想是将待分析基因集的基因与预先定义的基因集的基因（通常来自功能注释或先前实验的结果）进行比较，将待分析基因按照计算值从高到低排序（即：排序表），判断待分析基因在预先定义的基因集里面是随机分布还是主要聚集在顶部或是底部。如果是聚集在顶部或是底部，则说明预先定义的基因集对于表型的差异有贡献。GSEA的排序方法包括三种：基于信噪比、基于相关性结果和基于差异性分析结果。 6.8.1 基于信噪比signal2Noise排序 signal2Noise是GSEA官网提供的计算方式，用于对待分析基因进行排序。 &#x1F3F7;️示例： MAE |> EMP_GSEA_analysis(experiment = 'geno_ko',method='signal2Noise', estimate_group = 'Group', pvalueCutoff = 0.05,keyType = 'ko') 6.8.2 基于相关性排序 在GSEA的相关性排序算法中，可以通过指定参数threshold_r（相关系数的绝对值阈值）和threshold_p（p值阈值）进行过滤。具体而言，如果某个待分析基因与coldata中的特征的相关系数绝对值低于指定阈值，或者其p值大于指定阈值，那么该基因将会被从排序表中剔除。 &#x1F3F7;️示例： MAE |> EMP_GSEA_analysis(experiment = 'geno_ko',method='cor', estimate_group = 'BMI',cor_method = 'spearman', threshold_r = 0.3,threshold_p = 0.05, ###### filter by coe and pvalue pvalueCutoff = 0.05,keyType = 'ko',KEGG_Type = 'KEGG') 6.8.3 基于差异性分析log2FC排序 注意：①必须先使用模块EMP_diff_analysis进行差异性分析(分组只能为两组，否则无法输出可用于对接模块EMP_GSEA_analysis的结果)，然后再使用模块EMP_GSEA_analysis指定参数method='log2FC'做富集分析。②需区分模块EMP_GSEA_analysis中的参数pvalue和pvalueCutoff，前者对应模块EMP_diff_analysis分析结果中的pvalue，后者对应模块EMP_GSEA_analysis分析结果中的校正p值（例如：fdr、bonferroni等）。 &#x1F3F7;️示例： MAE |> EMP_diff_analysis(experiment = 'geno_ec',method='DESeq2',.formula = ~0+Group, group_level=c('Group_A','Group_B')) |> EMP_GSEA_analysis(method='log2FC',pvalue 6.8.4 GSEA的可视化 &#x1F3F7;️示例： MAE |> EMP_GSEA_analysis(experiment = 'geno_ko',method='signal2Noise', estimate_group = 'Group', pvalueCutoff = 0.05,keyType = 'ko') |> EMP_curveplot(geneSetID='map00680') MAE |> EMP_GSEA_analysis(experiment = 'geno_ko',method='signal2Noise', estimate_group = 'Group', pvalueCutoff = 0.05,keyType = 'ko') |> EMP_dotplot() Copyright © 382983280@qq.com 2024 all right reserved，powered by Gitbook更新时间： 2024-08-19 20:19:33 "},"MD/6.9 EMP_WGCNA_cluster_analysis.html":{"url":"MD/6.9 EMP_WGCNA_cluster_analysis.html","title":"6.9 EMP_WGCNA_cluster_analysis","keywords":"","body":"6.9 WGCNA聚类分析 EMP_WGCNA_cluster_analysis 加权基因共表达网络分析（Weighted correlation network analysis，WGCNA）旨在寻找协同表达的基因模块(module)，并探索基因网络与关注的表型之间的关联，以及探索网络中的核心基因。 6.9.1 WGCNA聚类模块 本模块集成了WGCNA包的相关模块，可以快速完成基于WCGNA算法的聚类。 &#x1F3F7;️示例： MAE |> EMP_assay_extract('geno_ec') |> EMP_WGCNA_cluster_analysis(RsquaredCut = 0.85) 注意： 参数EMP_WGCNA_cluster_analysis继承了WGCNA包WGCNA_blockwiseModules的用法，可以调整模块聚类效果。 ```R MAE |> EMP_assay_extract('geno_ec') |> EMP_WGCNA_cluster_analysis(RsquaredCut = 0.85,mergeCutHeight=0.4) ``` 6.9.2 WGCNA聚类模块的过滤 可以使用模块EMP_filter对WGCNA聚类分析结果进行筛选。此功能在后续的功能富集分析中有着广泛应用。 &#x1F3F7;️示例： MAE |> EMP_assay_extract('geno_ec') |> EMP_WGCNA_cluster_analysis(RsquaredCut = 0.85,mergeCutHeight=0.4) |> EMP_filter(feature_condition = WGCNA_color=='green') Copyright © 382983280@qq.com 2024 all right reserved，powered by Gitbook更新时间： 2024-08-19 20:24:00 "},"MD/6.10 EMP_WGCNA_cor_analysis.html":{"url":"MD/6.10 EMP_WGCNA_cor_analysis.html","title":"6.10 EMP_WGCNA_cor_analysis","keywords":"","body":"6.10 EMP_WGCNA_cor_analysis 在WGCNA聚类分析后，模块EMP_WGCNA_cor_analysis使用PCA方法对聚类模块进行降维，将解释度最大的轴与目标数据进行关联分析，从而探究哪些聚类数据具有潜在的后续分析价值。 6.10.1 基于单一组学与样本相关数据的WGCNA分析 &#x1F3F7;️示例1： 从MAE对象中提取组学项目geno_ec的assay，使用edgeR的方法筛选核心微生物，利用WGCNA进行聚类分析并与样本相关数据进行关联分析，通过绘制热图进行结果可视化。 MAE |> EMP_assay_extract('geno_ec') |> EMP_identify_assay(method = 'edgeR',estimate_group = 'Group') |> EMP_WGCNA_cluster_analysis(RsquaredCut = 0.85,mergeCutHeight=0.4) |> EMP_WGCNA_cor_analysis(coldata_to_assay = c('BMI','PHQ9','GAD7','HAMD','SAS','SDS'), method='spearman') |> EMP_heatmap_plot() &#x1F3F7;️示例2： 在利用WGCNA进行聚类分析并与样本相关数据进行关联分析后，可选择与目标样本相关数据相关性具有统计学意义的模块进行下游的差异性分析和富集分析。 MAE |> EMP_assay_extract('geno_ec') |> EMP_identify_assay(method = 'edgeR',estimate_group = 'Group') |> EMP_WGCNA_cluster_analysis(RsquaredCut = 0.85,mergeCutHeight=0.4) |> EMP_WGCNA_cor_analysis(coldata_to_assay = c('BMI','PHQ9','GAD7','HAMD','SAS','SDS'), method='spearman') |> EMP_filter(feature_condition = WGCNA_color=='black') |> EMP_diff_analysis(method = 'DESeq2',.formula = ~Group) |> EMP_enrich_analysis(keyType = 'ec',KEGG_Type = 'MKEGG') |> EMP_dotplot() 6.10.2 基于多个组学数据的WGCNA分析 &#x1F3F7;️示例： 首先，从MAE对象中提取组学项目geno_ec的assay，使用edgeR的方法筛选差异基因，并进行WGCNA聚类分析。其次，从MAE对象中提取组学项目host_gene的assay中的感兴趣基因（或使用差异性分析等方法选择目标基因）。 使用+符号连接两个组学，并进行WGCNA相关性分析。 注意： 在此模式下，默认会从第一个组学中提取WGCNA聚类结果与第二个组学进行WGCNA相关分析，因此注意使用+合并组学的顺序。 k1 EMP_assay_extract('geno_ec') |> EMP_identify_assay(method = 'edgeR',estimate_group = 'Group') |> EMP_WGCNA_cluster_analysis(RsquaredCut = 0.85,mergeCutHeight=0.4) k2 EMP_assay_extract('host_gene',pattern = c('A1BG','A1CF','A2MP1','AACS'), pattern_ref = 'feature') (k1 + k2) |> EMP_WGCNA_cor_analysis(method='spearman') |> EMP_heatmap_plot(palette = 'Spectral') Copyright © 382983280@qq.com 2024 all right reserved，powered by Gitbook更新时间： 2024-08-19 20:49:38 "},"MD/6.11 EMP_multi_analysis.html":{"url":"MD/6.11 EMP_multi_analysis.html","title":"6.11 EMP_multi_analysis","keywords":"","body":"6.11 组学联合分析 EMP_multi_analysis 模块EMP_multi_analysis旨在通过统计分析方法将多个具有统计学意义的p值整合到一个综合的p值中。通过参数method指定联合分析的方法，包括：feature、diff_feature_enrich和same_feature_enrich。 6.11.1 融合不同研究队列中相同特征的统计结果 不同的研究队列经常会针对同一个研究目标进行分析，其研究结果可能不一致。在微生物研究中，这种情况尤为普遍。为了应对这种情况，我们可以采用融合p值的方法，将多个统计学结果合并为一个综合结果。 &#x1F3F7;️示例： 从MAE对象中提取两个区域的微生物物种注释数据物种，并进行差异性分析。 k1 EMP_assay_extract('taxonomy') |> EMP_filter(Region == 'Paris') |> EMP_diff_analysis(method = 'DESeq2',.formula = ~Group) k2 EMP_assay_extract('taxonomy') |> EMP_filter(Region == 'Guangzhou') |> EMP_diff_analysis(method = 'DESeq2',.formula = ~Group) 使用融合p值的方法，融合两项差异性分析的p值结果。 注意： ①参数combineMethod提供三种融合P的方法：fisher，edgington 和 stouffer。 ②参数action='get'提取差异性分析结果。 (k1+k2) |> EMP_multi_analysis(method = 'feature',combineMethod='edgington', p.adjust = 'BH') 6.11.2 融合不同研究队列中相同特征的KEGG富集结果 本模块支持合并不同队列中相同特征的KEGG富集结果。 &#x1F3F7;️示例： 从MAE对象中提取两个区域的微生物功能基因的KO注释数据，并进行差异性分析和富集分析。 k1 EMP_assay_extract('geno_ko') |> EMP_filter(Region == 'Paris') |> EMP_diff_analysis(method = 'DESeq2',.formula = ~Group) |> EMP_enrich_analysis(pvalue EMP_assay_extract('geno_ko') |> EMP_filter(Region == 'Guangzhou') |> EMP_diff_analysis(method = 'DESeq2',.formula = ~Group) |> EMP_enrich_analysis(pvalue 对于相同特征的的富集分析结果，本模块有三种方法可以进行融合：enchier, ActivePathways和mitch。 注意：①当使用`enchier`方法时，采用的是p值融合算法。通过调整`combineMethod`参数，可以决定融合p值发生在特征水平还是富集分析结果水平。②`ActivePathways`和`mitch`算法则依赖于已经发表的两个组学融合分析包。 (k1+k2) |> EMP_multi_analysis(method = 'same_feature_enrich', keyType = 'ko',combineFun='ActivePathways')|> EMP_dotplot() --> 6.11.3 融合相同队列不同特征的KEGG富集结果 在同一个队列中，有时候会同时进行功能基因和代谢组学的测序分析，因此会出现两套KEGG富集分析的结果，且这两套结果通常不完全一致。在此种情况下，单纯使用韦恩图求交并集不能很好地揭示组学之间的富集情况。为了应对这种情况，本模块利用算法将不同组学中不同特征的KEGG富集结果融合在一起。 &#x1F3F7;️示例： 从MAE对象中提取KO注释结果和代谢组学结果，并分别完成KEGG富集分析。 k1 EMP_assay_extract('geno_ko') |> EMP_diff_analysis(method = 'DESeq2',.formula = ~Group) |> EMP_enrich_analysis(pvalue EMP_collapse(experiment = 'untarget_metabol',na_string=c('NA','null','','-'), estimate_group = 'MS2kegg',method = 'sum',collapse_by = 'row') |> EMP_diff_analysis(method = 'DESeq2',.formula = ~Group) |> EMP_enrich_analysis(pvalue 使用+符号将组学联合进行富集分析。 (k1+k2) |> EMP_multi_analysis(method = 'diff_feature_enrich') |> EMP_dotplot() --> Copyright © 382983280@qq.com 2024 all right reserved，powered by Gitbook更新时间： 2024-08-19 21:16:32 "},"MD/7 data support.html":{"url":"MD/7 data support.html","title":"Chapter 7 Data support","keywords":"","body":"7. 数据辅助 EMP_support: 欢迎阅读本章教程，本教程旨在为用户提供在EasyMultiProfiler数据分析流程中常用的辅助工具和方法。通过本教程，您将学习如何使用多种功能模块进行数据导入、筛选、提取以及查看历史记录等操作。 Copyright © 382983280@qq.com 2024 all right reserved，powered by Gitbook更新时间： 2024-08-19 22:35:10 "},"MD/7.1 data_filter.html":{"url":"MD/7.1 data_filter.html","title":"7.1 EMP_filter","keywords":"","body":"7.1 数据筛选 EMP_filter 模块EMP_filter功能十分强大，不仅可以根据数据的rowdata和coldata对特征和样本进行筛选、过滤，还可以对数据分析结果进行筛选。为了便于用户理解，以下对模块EMP_filter的基本参数进行介绍： obj ： 指定待分析的对象MAE或者EMPT。 experiment ： 指定待分析组学项目的名称(character)。 sample_condition：设定选择样本的阈值条件。 feature_condition: 设定选择特征的阈值条件。 filterSample: 直接指定要筛选的样本名称。 filterFeature: 直接指定要筛选的特征名称。 action: 与filterSample和filterFeature联用，设定为kick或select。 show_info: 设定输出结果的展现方式。 注意： ①用户需理解模块EMP_filter的过滤逻辑，首先是根据参数sample_condition和feature_condition的指定条件筛选样本和特征，然后再根据参数filterSample和filterFeature选择或者剔除样本和特征。 ②如果一次EMP_filter无法满足筛选需求，可以多次进行EMP_filter筛选过程。 7.1.1 对所有组学项目数据进行筛选过滤 &#x1F3F7;️示例1：在所有组学项目中筛选年龄大于30岁的男性受试者。 MAE |> EMP_filter(sample_condition = Sex == 'M' & Age >30) 筛选完成后，MAE对象中只存在满足条件的样本，可以直接使用其他分析模块进行下游分析。例如可以使用模块EMP_coldata_extract观察过滤后样本情况。 MAE |> EMP_filter(sample_condition = Sex == 'M' & Age >30) |> EMP_coldata_extract() &#x1F3F7;️示例2：筛选出样本相关数据中没有缺失值的样本。 注意： 模块EMP_filter继承了dplyr包的filter模块语法，因此可以使用tidy语法进行样本筛选。 MAE |> EMP_filter(sample_condition = if_all(everything(),~ !is.na(.))) &#x1F3F7;️示例3：筛选出PHQ9和GAD7至少有一个取值大于5的样本。 MAE |> EMP_filter(sample_condition = if_any(c(PHQ9,GAD7),~. > 5)) 7.1.2 对单一组学项目数据及分析结果进行筛选过滤 &#x1F3F7;️示例1：根据原始数据筛选样本。 注意： 参数action仅与参数filterSample和filterFeature配合使用。 从MAE对象中提取组学项目host_gene的assay，筛选出sex为M的样本，并将受试者编号为P70597的样本剔除。 MAE |> EMP_assay_extract('host_gene') |> EMP_filter(Sex == 'M' & Age >30,filterSample = 'P70597',action = 'kick') &#x1F3F7;️示例2：根据数据分析结果筛选样本。 从MAE对象中提取taxonomy的assay，进行alpha多样性分析，筛选满足shannon大于2的样本。 MAE |> EMP_assay_extract('taxonomy') |> EMP_alpha_analysis() |> EMP_filter(shannon > 2) &#x1F3F7;️示例3：根据数据分析结果筛选特征。 从MAE对象中提取组学项目host_gene的assay，进行差异性检验，并筛选出校正p值小于0.05的特征。 注意： ①由于在DESeq2算法中，变更特征和样本后的差异分析结果均会发生改变，因此如果需要原有差异分析结果需要参数keep_result。 ②传统的统计检验，如t.test或者wilcox.test等，不受特征改变，因此无需参数keep_result即可保留此结果。 MAE |> EMP_assay_extract('host_gene') |> EMP_diff_analysis(method = 'DESeq2',.formula = ~Group,p.adjust = 'BH') |> EMP_filter(feature_condition = BH &#x1F3F7;️示例4：多次、多条件筛选样本或特征。 从MAE对象中提取组学项目geno_ec的assay，进行WGCNA关联分析后再进行DESeq2差异性分析, 最后筛选出以下条件的数据: 年龄大于30岁的样本； 使用edgeR筛选核心基因； 在WGCNA关联分析中，与BMI的相关性具有统计学意义的black模块聚类内的特征； 差异性分析中p值小于0.05的特征。 MAE |> EMP_assay_extract('geno_ec') |> EMP_identify_assay(method = 'edgeR',estimate_group = 'Group') |> EMP_WGCNA_cluster_analysis(RsquaredCut = 0.85,mergeCutHeight=0.4) |> EMP_WGCNA_cor_analysis(coldata_to_assay = c('BMI','PHQ9','GAD7','HAMD','SAS','SDS'), method='spearman') |> EMP_heatmap_plot() |> # This step could help find the interesting module EMP_diff_analysis(method = 'DESeq2',.formula = ~Group) |> EMP_filter(sample_condition = Age >30, feature_condition = WGCNA_color == 'black' & pvalue 7.1.3 关于过滤后数据分析结果的清除问题 在EasyMultiProfiler包的分析流程中，分析结果会自动存储在对象中，供模块EMP_filter用于筛选样本和特征。然而，一旦筛选完成，之前存储的结果可能不再适用，因此会在筛选后自动清除（例如：容器中存储了差异性分析和alpha多样性分析的结果，然后用户根据BMI值剔除了一些样本。在这种情况下，原有的差异性分析结果将会自动清除，因为它们已经不再有效；而alpha多样性的结果则不受剔除样本的影响，会继续保存在容器中，以便下一次筛选使用）。EasyMultiProfiler包已经实现了自动化处理这一过程，并且会以红色文字提醒用户已经执行了该操作。 容易误解的例子： &#x1F3F7;️示例 ： 以EC:1.1.1.1的差异分析为例子。 当对全部特征进行deseq2差异分析如下： MAE |> EMP_assay_extract('geno_ec') |> EMP_diff_analysis(method = 'DESeq2',.formula = ~Group) 当只剔除部分其他特征后，再次进行DESeq2差异分析，可以发现1.1.1.1的结果发生了改变。这是因为DESeq2算法本身原因所致。这种情况还出现在edgeR、limma等算法中。 MAE |> EMP_assay_extract('geno_ec',pattern = '1.1.1.1',pattern_ref = 'feature') |> EMP_diff_analysis(method = 'DESeq2',.formula = ~Group) 但是，在传统的统计检验中，则不会出现类似的情况。 MAE |> EMP_assay_extract('geno_ec') |> EMP_diff_analysis(method = 't.test',estimate_group = 'Group') MAE |> EMP_assay_extract('geno_ec',pattern = '1.1.1.1',pattern_ref = 'feature') |> EMP_diff_analysis(method = 't.test',estimate_group = 'Group') 因此，当特征数目发生改变时候，EMP_filter会保留传统统计的差异结果，而清除DESeq2、edgeR和limma算法的结果。例如我们在DESeq2差异分析后筛选p值小于0.05的特征，由于特征数目减少，因此会触发清除动作。由于在完成筛选后，差异分析结果被清除后，因此输出结果为assay矩阵。 MAE |> EMP_assay_extract('geno_ec') |> EMP_diff_analysis(method = 'DESeq2',.formula = ~Group) |> EMP_filter(feature_condition = pvalue 如果，坚持要保留相应的结果，可以使用keep_result参数保留相应分析的结果。 MAE |> EMP_assay_extract('geno_ec') |> EMP_diff_analysis(method = 'DESeq2',.formula = ~Group) |> EMP_filter(feature_condition = pvalue 7.1.4 关于过滤后数据的显示问题 在EasyMultiProfiler包的分析流程中，使用模块EMP_filter筛选后，默认会继承前一个分析模块的显示效果（例如：如果前一个模块是进行了alpha多样性计算，当使用模块EMP_filter根据Age>30条件进行筛选时，由于样本的变化不会影响到原先的alpha多样性结果，因此模块EMP_filter的输出将会继续显示上一个模块中经过筛选的结果，即模块EMP_alpha_analysis的筛选结果）。如果前一个模块因为样本或特征的改变而被清除（详见7.1.3的说明），则会直接显示当前数据集assay的情况。 7.1.5 关于过滤后数据提取问题 在模块EMP_filter中，参数action仅用于配合filterSample和filterFeature进行筛选使用。如果需要在筛选后提取assay数据矩阵，可以在模块EMP_filter后继续使用模块EMP_assay_extract并指定参数action='get'。 &#x1F3F7;️示例：筛选后提取assay数据矩阵。 MAE |> EMP_assay_extract('host_gene') |> EMP_filter(Sex == 'M' & Age >30,filterSample = 'P70597',action = 'kick') |> EMP_assay_extract(action = 'get') Copyright © 382983280@qq.com 2024 all right reserved，powered by Gitbook更新时间： 2024-11-07 00:07:56 "},"MD/7.2 EMP_history.html":{"url":"MD/7.2 EMP_history.html","title":"7.2 EMP_history","keywords":"","body":"7.3 数据历史 EMP_history 本模块可以提取EasyMultiProfiler分析流程中任一结果的历史处理记录，方便用户追溯已经完成的数据分析流程。 7.3.1 追溯单组学项目数据分析的历史记录 k1 EMP_assay_extract('geno_ko') |> EMP_filter(Region == 'Paris') |> EMP_diff_analysis(method = 'DESeq2',.formula = ~Group) |> EMP_enrich_analysis(pvalue EMP_history() 7.3.2 追溯多组学项目数据分析的历史记录 k1 EMP_assay_extract('taxonomy') |> EMP_collapse(estimate_group = 'Genus',collapse_by = 'row') |> EMP_diff_analysis(method='DESeq2', .formula = ~Group) |> EMP_filter(feature_condition = pvalue EMP_collapse(experiment = 'untarget_metabol',na_string=c('NA','null','','-'), estimate_group = 'MS2kegg',method = 'sum',collapse_by = 'row') |> EMP_diff_analysis(method='DESeq2', .formula = ~Group) |> EMP_filter(feature_condition = pvalue 1.5) k3 EMP_assay_extract('geno_ec') |> EMP_diff_analysis(method='DESeq2', .formula = ~Group) |> EMP_filter(feature_condition = pvalue 2) #For two experinemnts p1 EMP_cor_analysis(method = 'spearman') |> EMP_heatmap_plot() ## Visualization p1 |> EMP_history() Copyright © 382983280@qq.com 2024 all right reserved，powered by Gitbook更新时间： 2024-08-03 10:19:56 "},"MD/7.3 EMP_result.html":{"url":"MD/7.3 EMP_result.html","title":"7.3 EMP_result","keywords":"","body":"7.3 数据分析结果的提取和注入 EMP_result 模块EMP_result可以提取EasyMultiProfiler分析流程中对象中存储的数据分析结果，并可以将符合格式要求的外部数据分析结果导入对象，联合在一起进行数据分析。 7.3.1 数据分析结果的提取 当对一个组学进行多次数据分析时，已经完成的数据分析结果会被存储在对象中。模块EMP_result可以根据需求快速提取所需数据分析的原始结果。 result EMP_assay_extract('geno_ec') |> EMP_alpha_analysis() |> EMP_diff_analysis(method = 'DESeq2',.formula = ~Group) |> EMP_enrich_analysis(pvalue EMP_result(info = 'EMP_diff_analysis') alpha_re EMP_result(info = 'EMP_alpha_analysis') enrich_re EMP_result(info = 'EMP_enrich_analysis') 7.3.2 数据分析结果的注入 任何分析工具包都难以囊括全部的数据分析处理方式，EMP_result模块可以将外部其他软件分析的结果导入数据对象中，协同EasyMultiProfiler内的分析结果进行联合分析。 &#x1F3F7;️示例：可以将外部vegan包计算多样性结果导入EMPT对象内。 Step1：提取微生物的物种注释数据。 tax_se EMP_assay_extract('taxonomy') assay_data EMP_assay_extract(action = 'get') Step2：使用vegan包计算shannon多样性指数，并命名为new_shannon。 assay_data tibble::column_to_rownames('primary') shannon_index 注意： 新增结果中的名称不允许与已经在数据结果内存在的名称重复，否则会导致模块EMP_filter无法正常使用。例如，在本示例中需要将外部结果的shanon指数更名为new_shannon, 从而避免与EMP_alpha_analysis的结果名称重复。 ### inject the new result into EMPT object EMP_result(tax_se, value_name = 'new_alpha', affect_when_sample_changed=0, affect_when_feature_changed=1, attribute='primary', attribute2='normal',source='user_import') EMP_filter(sample_condition = new_shannon >4) Copyright © 382983280@qq.com 2024 all right reserved，powered by Gitbook更新时间： 2024-09-07 22:41:05 "},"MD/7.4 EMP_summary.html":{"url":"MD/7.4 EMP_summary.html","title":"7.4 EMP_summary","keywords":"","body":"7.4 数据概览 EMP_summary 模块EMP_summary可以快速对MAE对象和EMP对象进行概览可视化。概览可视化分为以下三个部分： Data dimention： Sample指当前组学项目内实验数据的样本数目，Feature指当前组学项目内的特征数目。 Data information: Sample_attr指当前组学项目内样本相关数据的分类数目，Feature_atrr指当前组学项目内特征相关数据的分类数目。例如，组学项目taxonomy的Feature_atrr为8，代表特征注释包括了界门纲目科属种株 8个级别。 Data miss: Assay_status,Sample_status和Feature_status分别指当前组学项目的实验数据、样本相关数据和特征相关数据中是否存在缺失值。 7.4.1 MAE对象的概览可视化 data(MAE) MAE |> EMP_summary() 7.4.2 EMP对象的概览可视化 k1 EMP_assay_extract('taxonomy') |> EMP_collapse(estimate_group = 'Genus',collapse_by = 'row') |> EMP_diff_analysis(method='DESeq2', .formula = ~Group) |> EMP_filter(feature_condition = pvalue EMP_collapse(experiment = 'untarget_metabol',na_string=c('NA','null','','-'), estimate_group = 'MS2kegg',method = 'sum',collapse_by = 'row') |> EMP_diff_analysis(method='DESeq2', .formula = ~Group) |> EMP_filter(feature_condition = pvalue 1.5) (k1 + k2) |> EMP_summary() Copyright © 382983280@qq.com 2024 all right reserved，powered by Gitbook更新时间： 2024-08-03 10:57:32 "},"MD/7.5 EMP_taxonomy_import.html":{"url":"MD/7.5 EMP_taxonomy_import.html","title":"7.5 EMP_taxonomy_import","keywords":"","body":"7.5 物种数据导入 EMP_taxonomy_import 详见: 2.1.3 读取微生物组学数据 Copyright © 382983280@qq.com 2024 all right reserved，powered by Gitbook更新时间： 2024-08-03 10:54:00 "},"MD/7.6 EMP_function_import.html":{"url":"MD/7.6 EMP_function_import.html","title":"7.6 EMP_function_import","keywords":"","body":"7.6 功能数据导入 EMP_function_import 详见: 2.1.4 读取KO/EC组学数据 Copyright © 382983280@qq.com 2024 all right reserved，powered by Gitbook更新时间： 2024-08-03 10:54:00 "},"MD/7.7 EMP_normal_import.html":{"url":"MD/7.7 EMP_normal_import.html","title":"7.7 EMP_normal_import","keywords":"","body":"7.7 标准数据导入 EMP_normal_import 详见: 2.1.5 读取标准表格信息 Copyright © 382983280@qq.com 2024 all right reserved，powered by Gitbook更新时间： 2024-08-03 10:54:00 "},"MD/7.8 EMP_easy_import.html":{"url":"MD/7.8 EMP_easy_import.html","title":"7.8 EMP_easy_import","keywords":"","body":"7.8 EMP_easy_import 详见：2.2 创建单一组学项目的MultiAssayExperiment对象 Copyright © 382983280@qq.com 2024 all right reserved，powered by Gitbook更新时间： 2024-08-20 01:35:19 "},"MD/8 data virtualization.html":{"url":"MD/8 data virtualization.html","title":"Chapter 8 Data Virtualization","keywords":"","body":"8. 数据分析可视化 Data Virtualization : 欢迎阅读本章教程，本教程旨在为您提供全面的数据可视化技术指南。通过本教程，您将学习如何使用多种图表来分析和展示EasyMultiProfiler数据分析结果。无论是常见的基础图表和富集分析图表，还是生信数据分布和关系，本教程都将为您提供清晰的指导和实用的技巧，帮助您更有效地进行数据可视化。 Copyright © 382983280@qq.com 2024 all right reserved，powered by Gitbook更新时间： 2024-08-03 23:29:56 "},"MD/8.1 EMP_boxplot.html":{"url":"MD/8.1 EMP_boxplot.html","title":"8.1 EMP_boxplot","keywords":"","body":"8.1 箱型图 EMP_boxplot 箱形图（又称盒须图、盒式图、盒状图或箱线图），是一种用于展示数据分布情况的统计图。 注意： ①模块EMP_boxplot主要用于差异性分析结果的快速可视化，无法实现配对检验或两组以上数据的方差分析、秩和检验。 ②更全面的差异性分析可通过模块EMP_diff_analysis来实现，用户可手动修改图示的p值。 8.1.1 针对丰度数据的箱型图 &#x1F3F7;️示例： MAE |> EMP_assay_extract('host_gene',pattern = 'A1BG',pattern_ref = 'feature') |> EMP_boxplot(method='t.test',estimate_group='Group') 8.1.2 针对alpha多样性指数的箱型图 &#x1F3F7;️示例： MAE |> EMP_assay_extract('taxonomy') |> EMP_alpha_analysis()|> EMP_boxplot(method='t.test',estimate_group='Group') Copyright © 382983280@qq.com 2024 all right reserved，powered by Gitbook更新时间： 2024-08-03 21:59:20 "},"MD/8.2 EMP_scatterplot.html":{"url":"MD/8.2 EMP_scatterplot.html","title":"8.2 EMP_scatterplot","keywords":"","body":"8.2 散点图 EMP_scatterplot 散点图是用笛卡尔坐标系上的点表示二个或多个变量分布方式的图。 8.2.1 针对降维分析的可视化 注意： 指定参数show可以从p12、p13、p23三个维度观察降维结果并提供html交互式图形展示。 &#x1F3F7;️示例： MAE |> EMP_assay_extract('taxonomy') |> EMP_identify_assay(method='default',estimate_group = 'Group') |> EMP_collapse(estimate_group = 'Genus',collapse_by = 'row') |> EMP_dimension_analysis(method = 'pcoa',distance='bray') |> EMP_scatterplot(estimate_group='Group',show='p12html',ellipse=0.3) Copyright © 382983280@qq.com 2024 all right reserved，powered by Gitbook更新时间： 2024-08-03 21:59:45 "},"MD/8.3 EMP_dotplot.html":{"url":"MD/8.3 EMP_dotplot.html","title":"8.3 EMP_dotplot","keywords":"","body":"8.3 富集点状图 EMP_dotplot 模块EMP_dotplot用于对接富集分析后的富集点状图。 8.3.1 KEGG富集分析的可视化 模块EMP_dotplot继承了enrichplot包的dotplot，可以对富集分析的结果进行可视化。 &#x1F3F7;️示例： MAE |> EMP_assay_extract(experiment = 'geno_ec') |> EMP_diff_analysis(method='DESeq2',.formula = ~Group) |> EMP_enrich_analysis(condition = pvalue EMP_dotplot() Copyright © 382983280@qq.com 2024 all right reserved，powered by Gitbook更新时间： 2024-08-20 12:04:28 "},"MD/8.4 EMP_netplot.html":{"url":"MD/8.4 EMP_netplot.html","title":"8.4 EMP_netplot","keywords":"","body":"8.4 富集网络图 EMP_netplot 模块EMP_netplot用于对接GSEA分析后的富集网络图。 8.4.1 KEGG富集分析的网络图 模块EMP_netplot继承了enrichplot包的cnetplot，可以对富集分析的结果进行可视化。 &#x1F3F7;️示例： MAE |> EMP_assay_extract(experiment = 'geno_ec') |> EMP_diff_analysis(method='DESeq2',.formula = ~Group) |> EMP_enrich_analysis(condition = pvalue EMP_netplot() Copyright © 382983280@qq.com 2024 all right reserved，powered by Gitbook更新时间： 2024-08-20 12:04:40 "},"MD/8.5 EMP_fitline_plot.html":{"url":"MD/8.5 EMP_fitline_plot.html","title":"8.5 EMP_fitline_plot","keywords":"","body":"8.5 双变量拟合图 EMP_fitline_plot 模块EMP_fitline_plot可以计算并绘制双变量的拟合线图。 8.5.1 单一组学内数据的双变量拟合 &#x1F3F7;️示例： ## For EMPT MAE |> EMP_assay_extract('geno_ec') |> EMP_fitline_plot(var_select=c('1.1.1.1','BMI'),formula = y ~ poly(x, 1)) MAE |> EMP_assay_extract('geno_ec') |> EMP_fitline_plot(var_select=c('Weight','BMI'),estimate_group='Sex',show='pic') 8.5.2 多组学之间数据的双变量拟合 注意： ①参数combineMethod提供三种融合p值的方法：fisher，edgington 和 stouffer。 ②参数action='get'提取差异性分析结果。 &#x1F3F7;️示例： ## For EMP k1 EMP_assay_extract('geno_ec') |> EMP_decostand(method = 'clr') k2 EMP_assay_extract('taxonomy') |> EMP_collapse(collapse_by='row',estimate_group = 'Class',method = 'sum') |> EMP_decostand(method = 'relative') (k1 + k2) |> EMP_fitline_plot(var_select=c('1.1.1.1','Bacilli'), estimate_group='Group',eq_size=2.5) Copyright © 382983280@qq.com 2024 all right reserved，powered by Gitbook更新时间： 2024-08-20 12:17:42 "},"MD/8.6 EMP_curveplot.html":{"url":"MD/8.6 EMP_curveplot.html","title":"8.6 EMP_curveplot","keywords":"","body":"8.6 富集曲线图 EMP_curveplot 模块EMP_curveplot用于对接GSEA分析后的富集曲线图。 &#x1F3F7;️示例： MAE |> EMP_GSEA_analysis(experiment = 'geno_ko',method='signal2Noise', estimate_group = 'Group', pvalueCutoff = 0.05,keyType = 'ko') |> EMP_curveplot(geneSetID='map00680') Copyright © 382983280@qq.com 2024 all right reserved，powered by Gitbook更新时间： 2024-08-03 23:30:18 "},"MD/8.7 EMP_heatmap_plot.html":{"url":"MD/8.7 EMP_heatmap_plot.html","title":"8.7EMP_heatmap_plot","keywords":"","body":"8.7 热图 EMP_heatmap_plot 热图用于可视化数据矩阵，通过颜色来表示数值的大小，被广泛应用于生物信息学、数据分析和统计学等领域，能够直观地展示数据集的模式和关系。 8.3.1 数据丰度热图 注意： ①绘制热图前，可以使用EMP_decostand进行标准化，从而使热图达到最佳的美化效果。 ②参数palette可以修改色板。 &#x1F3F7;️示例： MAE |> EMP_assay_extract('geno_ec') |> EMP_diff_analysis(method='DESeq2',.formula = ~Group) |> EMP_filter(feature_condition = pvalue3.5) |> EMP_decostand(method = 'clr') |> EMP_heatmap_plot(clust_row=TRUE,clust_col=TRUE,rotate=TRUE) 8.3.2 相关性热图 &#x1F3F7;️示例： micro_data EMP_assay_extract('taxonomy') |> EMP_identify_assay(method='default') |> EMP_collapse(estimate_group = 'Genus',collapse_by = 'row') |> EMP_decostand(method='relative') meta_data EMP_assay_extract('taxonomy') |> EMP_coldata_extract(action = 'add', coldata_to_assay = c('SAS','SDS','HAMA','HAMD','PHQ9','GAD7')) (micro_data + meta_data) |> EMP_cor_analysis() |> EMP_heatmap_plot(label_size=2,palette='Spectral', clust_row=TRUE,clust_col=TRUE) 8.3.3 WGCNA相关性热图 模块EMP_heatmap_plot可以直接对接WGCNA相关性分析的结果。详见：6.10 EMP_WGCNA_cor_analysis。 &#x1F3F7;️示例： MAE |> EMP_assay_extract('geno_ec') |> EMP_identify_assay(method = 'edgeR',estimate_group = 'Group') |> EMP_WGCNA_cluster_analysis(RsquaredCut = 0.85,mergeCutHeight=0.4) |> EMP_WGCNA_cor_analysis(coldata_to_assay = c('BMI','PHQ9','GAD7','HAMD','SAS','SDS'), method='spearman') |> EMP_heatmap_plot() Copyright © 382983280@qq.com 2024 all right reserved，powered by Gitbook更新时间： 2024-08-20 12:31:22 "},"MD/8.8 EMP_sankey_plot.html":{"url":"MD/8.8 EMP_sankey_plot.html","title":"8.8 EMP_sankey_plot","keywords":"","body":"8.8 桑基图 EMP_sankey_plot 桑基图(Sankey Diagram)是一种特定类型的流图（Flow diagram），通常用于描述多组特征之间的相互关系。模块EMP_sankey_plot可以根据模块EMP_cor_analysis计算所得的多重相关性结果，绘制相关性桑基图。 注意： ①相关性桑基图中，红色为正相关，蓝色为负相关。 ②相关性桑基图会评估每个节点之间的相互关系，孤立的节点将会被过滤。 ③参数pvalue和rvalue可以调节边的数量。 &#x1F3F7;️示例： micro_data EMP_assay_extract('taxonomy') |> EMP_identify_assay(method='default') |> EMP_collapse(estimate_group = 'Genus',collapse_by = 'row') |> EMP_decostand(method='relative') ko_data EMP_assay_extract('geno_ko') |> EMP_identify_assay(method='edgeR') |> EMP_diff_analysis(method='DESeq2',.formula = ~Region+Group) |> EMP_filter(feature_condition = pvalue EMP_assay_extract(experiment = 'untarget_metabol') |> EMP_collapse(estimate_group = 'MS2kegg',collapse_by='row', na_string = c(\"NA\", \"null\", \"\",\"-\"), method = 'mean',collapse_sep = '+') |> EMP_decostand(method = 'relative') |> EMP_dimension_analysis(method = 'pls',estimate_group = 'Group') |> EMP_filter(feature_condition = VIP >2) host_gene EMP_assay_extract('host_gene') |> EMP_identify_assay(method='edgeR') |> EMP_diff_analysis(method='DESeq2',.formula = ~Region+Group) |> EMP_filter(feature_condition = pvalue EMP_assay_extract('taxonomy') |> EMP_coldata_extract(action = 'add', coldata_to_assay = c('SAS','SDS','HAMA','HAMD','PHQ9','GAD7')) (micro_data + ko_data + metabolite_data + host_gene + meta_data) |> EMP_cor_analysis() |> EMP_sankey_plot() Copyright © 382983280@qq.com 2024 all right reserved，powered by Gitbook更新时间： 2024-08-03 23:30:37 "},"MD/8.9 EMP_structure_plot.html":{"url":"MD/8.9 EMP_structure_plot.html","title":"8.9 EMP_structure_plot","keywords":"","body":"8.9 结构柱状图 EMP_structure_plot 结构图主要用于展现数据内Top特征的相对含量。例如，在微生物组学数据中，可以根据前10位菌种的相对丰度来展示样本内微生物的主要组成情况。 8.9.1 物种结构图 微生物数据经常需要绘制物种结构图。 注意： ①内置的色板提供了15种颜色，最多可指定绘制前15位特征。当需要绘制更多的特征时，需要通过设置参数palette指定更多种类的色板。 ②参数method可以指定根据数据的平均值、中位数、最大值或者最小值来选择Top特征。 &#x1F3F7;️示例1：绘制纲级别物种丰度前10名的相对丰度结构图。 MAE |> EMP_assay_extract('taxonomy') |> EMP_decostand(method = 'relative') |> EMP_collapse(estimate_group = 'Class',collapse_by = 'row') |> EMP_structure_plot(top_num=10) &#x1F3F7;️示例2：利用参数estimate_group设置分组，并绘制物种结构图。 MAE |> EMP_assay_extract('taxonomy') |> EMP_decostand(method = 'relative') |> EMP_collapse(estimate_group = 'Class',collapse_by = 'row') |> EMP_structure_plot(top_num=10,estimate_group='Group') &#x1F3F7;️示例3：先按照Sex折叠assay，再绘制分组的物种结构图。 MAE |> EMP_assay_extract('taxonomy') |> EMP_collapse(estimate_group = 'Sex',collapse_by = 'col') |> EMP_decostand(method = 'relative') |> EMP_collapse(estimate_group = 'Class',collapse_by = 'row') |> EMP_structure_plot(top_num=10) 8.9.2 差异基因结构图 结构图可用于展现基因组学Top特征的分布情况。 &#x1F3F7;️示例：绘制差异基因中表达最高的前5名。 MAE |> EMP_assay_extract('host_gene') |> EMP_diff_analysis(method = 'deseq2',.formula = ~Group) |> EMP_filter(feature_condition = pvalue EMP_structure_plot(top_num=5) Copyright © 382983280@qq.com 2024 all right reserved，powered by Gitbook更新时间： 2024-08-03 23:30:42 "},"MD/8.10 EMP_volcanol_plot.html":{"url":"MD/8.10 EMP_volcanol_plot.html","title":"8.10 EMP_volcanol_plot","keywords":"","body":"8.10 火山图 EMP_volcanol_plot 模块EMP_volcanol_plot可以通过绘制火山图对差异性分析结果进行可视化。 8.10.1 无特征标注的火山图 注意： 参数show可以提供html交互式图形展示。 &#x1F3F7;️示例: MAE |> EMP_decostand(experiment = 'geno_ec',method = 'integer') |> EMP_diff_analysis(method='DESeq2',.formula = ~Group) |> EMP_volcanol_plot(show='html') 8.10.2 标注特征的火山图 注意： 本模块继承了ggrepel::geom_text_repel的参数用法，可以标注感兴趣的特征。 &#x1F3F7;️示例1: MAE |> EMP_decostand(experiment = 'geno_ec',method = 'integer') |> EMP_diff_analysis(method='DESeq2',.formula = ~Group) |> EMP_volcanol_plot(key_feature = c('3.6.1.62','1.5.3.19'),show='pic', min.segment.length = 0, seed = 42, box.padding = 0.5) &#x1F3F7;️示例2: MAE |> EMP_decostand(experiment = 'geno_ec',method = 'integer') |> EMP_diff_analysis(method='DESeq2',.formula = ~Group) |> EMP_volcanol_plot(key_feature = c('3.6.1.62','1.5.3.19'),color = \"white\", bg.color = \"grey30\",bg.r = 0.15) Copyright © 382983280@qq.com 2024 all right reserved，powered by Gitbook更新时间： 2024-08-20 13:37:16 "},"MD/9. More Usefull Tools.html":{"url":"MD/9. More Usefull Tools.html","title":"Chapter 9 More Useful Tools","keywords":"","body":"9. 更多有用模块 本章节包含诸多快捷的模块方便配合EasyMultiProfiler数据分析流程使用。 9.1 高效快速的相关性分析CorRcpp 在EasyMultiProfiler内部使用了C++语言极大地加速了相关性分析的计算。 data_df1 与其他常用的相关性计算工具相比，EasyMultiProfiler 内置的 CorRcpp 具有显著的速度优势，使得用户在进行多组学分析时，能够高效地构建大量的基因或特征之间的相关矩阵。同时，用户可以在模块 EMP_cor_analysis 中直接利用这种优势，并将生成的矩阵输出到专业的网络分析工具，如 Cytoscape 、MENA和Gephi等工具。 # Create the data matrix nrows 9.2 多重字符串匹配检测 str_detect_multi 注意： ①模块str_detect_multi可以同时匹配多个感兴趣的字符串。②参数exact支持模糊查找和完全匹配查找。 text 此外，在EasyMultiProfiler数据分析流程中，模块str_detect_multi也可以提供帮助。 &#x1F3F7;️示例1：可以同时提取微生物组学中门级别中Bacteroidetes和Firmicutes的物种。 MAE |> EMP_assay_extract('taxonomy') |> EMP_filter(feature_condition = str_detect_multi(Phylum,c('Bacteroidetes','Firmicutes'))) &#x1F3F7;️示例2：可以剔除在纲级别没有完整注释的物种。 MAE |> EMP_assay_extract('taxonomy') |> EMP_filter(feature_condition = !str_detect_multi(Class,'unclassified')) 9.3 兼容EasyMicroPlot数据分析流程 EMP_to_EMP1 在EasyMultiProfiler数据分析流程中，可以利用函数将微生物数据快速导出成EasyMicroPlot可接受的格式。 注意： ①模块EMP_to_EMP1导出数据时需要首先利用EMP_feature_convert将微生物注释切换为全注释。②模块EMP_to_EMP1无法导出已经折叠完毕的数据。 &#x1F3F7;️示例：导出微生物数据，并完成EasyMicroPlot的共发生网络分析。 # Get the data from EasyMultiProfiler MAE |> EMP_assay_extract('taxonomy') |> EMP_feature_convert(from = 'tax_single',add = 'tax_full') |> EMP_to_EMP1(estimate_group = 'Group') -> deposit # Work in the EasyMicroPlot library(EasyMicroPlot) cooc_re Copyright © 382983280@qq.com 2024 all right reserved，powered by Gitbook更新时间： 2024-09-09 13:39:50 "},"MD/10 Examples.html":{"url":"MD/10 Examples.html","title":"Chapter 10 More Examples","keywords":"","body":"10. 示例教程 本章节主要提供EasyMultiProfiler数据分析流程中各种实际的项目示例和便捷操作，旨在帮助用户快速理解和实现各种实用的分析策略。如果您有任何需要实现的操作或者建议，欢迎访问我们的github Issues，我们将及时答疑解惑，并选择具有普遍性的示例在教程中进行更新。 Copyright © 382983280@qq.com 2024 all right reserved，powered by Gitbook更新时间： 2024-08-20 13:37:32 "},"MD/10.1 Meta data regroup.html":{"url":"MD/10.1 Meta data regroup.html","title":"10.1 Meta data modified","keywords":"","body":"10.1 样本相关数据重处理 在使用EasyMultiProfiler包进行数据分析时，不可避免的需要对样本相关数据进行重新分组等操作。此时，无需修改原始数据并重新组装MAE对象，而是可以利用MAE对象的$方法和tidy语法来处理样本相关数据。 10.1.1 样本相关数据重分组 &#x1F3F7;️示例： 从原始MAE对象中提取组学项目taxonomy的coldata，将coldata中原始的表型变量Education_Years衍生为新的表型变量Edu_status（以新的表型变量作为分组信息），再利用MAE对象的$ 方法将新的表型变量加入原始MAE对象。 注意： 新的coldata与原始的coldata的primary列的受试者编号排序必须完全一致。 raw_meta EMP_coldata_extract(experiment = 'taxonomy') new_meta dplyr::mutate(Edu_status = dplyr::if_else(Education_Years > 15, \"High\", \"Low\")) new_meta 10.1.2 样本相关数据的因子排序 在可视化过程中，有时候需要对样本相关数据内的分组进行重排序，以满足绘图需求。 &#x1F3F7;️示例：利用MAE的$方法对原始分组进行因子排序。 MAE$Group EMP_assay_extract(experiment='taxonomy') |> EMP_alpha_analysis() |> EMP_boxplot(estimate_group='Group',method='t.test') Copyright © 382983280@qq.com 2024 all right reserved，powered by Gitbook更新时间： 2024-08-03 22:09:42 "},"MD/10.2 Experiment data.html":{"url":"MD/10.2 Experiment data.html","title":"10.2 Experiment data","keywords":"","body":"10.2 实验数据快速处理 在生物学实验中，常常需要对实验数据进行快速处理分析（例如：统计小鼠的体重、计算QPCR结果等）。借助datapasta包的复制功能和EasyMultiProfiler的便捷导入功能，可以快速完成各种复杂的统计分析工作。 &#x1F3F7;️示例：小鼠称重数据的快速计算。 Step1：在excel文件中复制所需数据，并在R中执行。 datapasta::tribble_paste() Step2：在Rstudio界面，已自动地将复制的数据整理成dataframe格式，使用datapasta包的tribble_paste模块能将该数据框直接赋值为df并存储。 Step3：使用EasyMultiProfiler将df便捷导入MAE对象中。 coldata dplyr::select(Num,cage,week,Group) |> tibble::column_to_rownames('Num') assay_data dplyr::select(Num,weight) |> tibble::column_to_rownames('Num') |> t() |> as.data.frame() |> tibble::rownames_to_column('feature') MAE Step4：进行数据分析。 观察小鼠体重的大致分布。 MAE |> EMP_assay_extract('experiment') |> EMP_structure_plot(estimate_group='Group') 比较不同分组和不同笼子的小鼠的体重差异。 MAE |> EMP_assay_extract('experiment') |> EMP_boxplot(estimate_group='Group',method='t.test') MAE |> EMP_assay_extract('experiment') |> EMP_boxplot(estimate_group='cage',method='t.test') Copyright © 382983280@qq.com 2024 all right reserved，powered by Gitbook更新时间： 2024-08-03 23:09:36 "},"MD/10.3 Paired test.html":{"url":"MD/10.3 Paired test.html","title":"10.3 Paired test and intervention cohort","keywords":"","body":"10.3 配对检验和干预队列的处理方案 在涉及干预的研究中，常常需要分析同一批受试者在干预前后的组学数据（例如：溃疡性结肠炎患者在益生菌干预前和干预后肠道菌群的比较），并进行配对检验。为了确保配对检验能正常运行，需要在导入数据时将受试者编号进行特殊编号处理。 &#x1F3F7;️示例： Step1: 处理样本相关数据。 为了符合配对检验的排序需求，在样本相关数据primary列的受试者编号中分别添加A_和B_字符以区分干预前和干预后。 Step2: 处理关系表。 如果需要导入多个组学项目，关系表的处理方式和样本相关数据处理方式一致。 Step3: 进行差异性检验。 在模块EMP_diff_analysis中增加参数paired=TRUE，即可进行配对差异性检验。 注意： ①以下代码仅做展示，示例数据中无配对数据。 ②模块EMP_boxplot和EMP_scatterplot旨在快速地对差异性检验结果进行可视化，而无法完成配对检验或者方差分析等计算。用户可以用各种图形编辑器手动将模块EMP_diff_analysis的结果修改入上述可视化的结果。 MAE |> EMP_assay_extract(experiment = 'taxonomy') |> EMP_diff_analysis(method = 'wilcox.test',estimate_group = 'Group',paired=TRUE) Copyright © 382983280@qq.com 2024 all right reserved，powered by Gitbook更新时间： 2024-08-20 14:45:18 "},"MD/10.4 Microbial annotation.html":{"url":"MD/10.4 Microbial annotation.html","title":"10.4 Full taxonomy annotation","keywords":"","body":"10.4 微生物数据完整注释问题 微生物数据分析中，经常会将数据折叠成门纲目科属种不同级别进行下游分析。但是受限于数据库注释的不规范，个别菌种可能存在下级注释同名，而上级注释不同名的情况。这种情况会导致EMP_collapse函数在属级别数据折叠中，错误的将不同的菌合并在一起。如下： Family Genus Species Lachnospiraceae Ruminococcus unclassified Ruminococcaceae Ruminococcus unclassified Oscillospiraceae Ruminococcus unclassified 因此，EasyMultiProfiler提供了两种微生物注释方式：完整层级注释和单一层级注释。用户可以根据需求选择合适的方式。完整层级注释在注释上更为严谨，适合进行不涉及具体细菌名称的分析和绘图（如α多样性、β多样性分析）。这种情况下，推荐直接使用完整层级注释名称。如果涉及具体细菌名称的绘图，建议先使用ggsave保存图形，再手动调整标签和注释，以提高图形的可读性。单一层级注释则在绝大多数情况下能够满足需求，并且不会影响可视化效果。 &#x1F3F7;️示例1： 原始注释为单一层级注释： MAE |> EMP_assay_extract('taxonomy') |> EMP_collapse(estimate_group = 'Phylum',collapse_by = 'row') 转换为完整注释： 注意： 此函数仅能在微生物数据折叠前使用。 MAE |> EMP_assay_extract('taxonomy') |> EMP_feature_convert(from = 'tax_single',add = 'tax_full') |> EMP_collapse(estimate_group = 'Phylum',collapse_by = 'row') 将完整注释转换回单一层级注释： MAE |> EMP_assay_extract('taxonomy') |> EMP_feature_convert(from = 'tax_single',add = 'tax_full') |> EMP_feature_convert(from = 'tax_full',add = 'tax_single') |> EMP_collapse(estimate_group = 'Phylum',collapse_by = 'row') &#x1F3F7;️示例2： 完整注释后进行多样性分析 MAE |> EMP_assay_extract('taxonomy') |> EMP_feature_convert(from = 'tax_single',add = 'tax_full') |> EMP_collapse(estimate_group = 'Species',collapse_by = 'row') |> EMP_alpha_analysis() Copyright © 382983280@qq.com 2024 all right reserved，powered by Gitbook更新时间： 2024-09-09 19:29:31 "},"MD/10.5 Installation issues.html":{"url":"MD/10.5 Installation issues.html","title":"10.5 Installation issues","keywords":"","body":"10.5 安装错误问题 EasyMultiProfiler依赖多种R包，因此在安装过程中可能会出现环境依赖冲突等问题。本章节介绍了常见的安装错误及解决办法。 10.5.1 便捷安装 if (!requireNamespace(\"pak\", quietly=TRUE)) install.packages(\"pak\") if (!requireNamespace(\"remotes\", quietly=TRUE)) install.packages(\"remotes\") remotes::install_version(\"patchwork\",version='1.2.0',force = TRUE) pak::pak(\"liubingdong/EasyMultiProfiler\") library(EasyMultiProfiler) 1. 安装超时错误 解决方法： 对于有些网络不稳定的地区，用户可以指定当地镜像网址来避免安装超时错误 ## 例如中国大陆地区可是设置如下 local({r 2. 常见错误 \"pkgbuild::check build tools(debug = TRUE)\" 解决方法： Windows用户可能遇到\"Could not find tools necessary to compile a package\"无法编译的错误提示。为了解决这个问题，用户需要安装对应版本的Rtools （R4.3.X 需要RTool43, for R 4.4.X need RTool44, 以此类推， click here ~ 400MB）。安装完成后重启R和Rstudio再次尝试pak::pkg_install(\"liubingdong/EasyMultiProfiler\"). 3. 常见错误 \"Cannot open lock file: Permission denied\" 这种错误是由于安装失败导致的文件锁定，需要用户手动删除对应的缓存文件 ## 苹果MAC用户 rm -rf /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/library/_cache/* 10.5.2 手动安装 # 这一步需要手动输入： 1 2 3 4 5 6 7 setRepositories(addURLs = c(BioCsoft = \"https://bioconductor.org/packages/3.18/bioc\", BioCann = \"https://bioconductor.org/packages/3.18/data/annotation\")) options(timeout = 600000000) install.packages(\"remotes\") # remotes (>= 2.5.0) remotes::install_version(\"patchwork\",version='1.2.0',force = TRUE) # patchwork (1.2.0) install.packages(\"BiocManager\") # BiocManager (>= 1.30.22) BiocManager::install(\"base64enc\") # base64enc (>= 0.1.3) BiocManager::install(\"WGCNA\") # WGCNA (>= 1.72.5) BiocManager::install(\"clusterProfiler\") # clusterProfiler (>= 4.10.0) remotes::install_github(\"liubingdong/EasyMultiProfiler\") library(EasyMultiProfiler) 1. 安装超时错误 解决方法： 由于EasyMultiProfiler包含了提供全面工具所需的必要数据，因此其安装包大小约为20MB，这可能会导致某些网络条件较差的用户出现安装超时错误。用户可以通过调整最大连接时间来确保安装成功。 options(timeout = 600000000) 2. install_github无法找到Bioconductor 仓库 解决方法： 用户可以手动指定仓库地址 setRepositories(addURLs = c(BioCsoft = \"https://bioconductor.org/packages/3.18/bioc\", BioCann = \"https://bioconductor.org/packages/3.18/data/annotation\")) 3. patchwork版本错误 由于patchwork包存在两个版本可能会导致enrichplot包的冲突问题，用户需要安装指定的版本。 解决方法 1: 在安装过程中，务必不要升级patchwork 1.2.0 到 2.4 解决方案 2： 如果环境中已经存在了patchwork包的冲突问题，可以手动强制降级解决问题。 remotes::install_version(\"patchwork\",version='1.2.0',force = TRUE) pak::pkg_install(\"liubingdong/EasyMultiProfiler\") ## After restart R Copyright © 382983280@qq.com 2024 all right reserved，powered by Gitbook更新时间： 2024-11-14 19:30:05 "},"MD/Contact.html":{"url":"MD/Contact.html","title":"Contact","keywords":"","body":"联系我们 😃😃😃非常感谢您使用EasyMultiProfiler工具进行微生物分析，欢迎加入QQ群进行相关的讨论。 QQ讨论群: 729506293🔥🔥🔥 📬📬📬如果到任何BUG或者建议，欢迎随时联系我们或者在github Issues提问和讨论。 E-Mail: 382983280@qq.com✉️ E-Mail:xielw@gdim.cn ✉️ 👇👇👇如果我们工具有帮助到您的文章发表，非常感谢您能引用我们的文章。 Copyright © 382983280@qq.com 2024 all right reserved，powered by Gitbook更新时间： 2024-07-09 21:11:42 "}}